package moe.lymia.multiverse.util

import java.nio.charset.StandardCharsets
import java.nio.file.{Files, Path}

import scala.xml.{XML, Node, PrettyPrinter}
import play.api.libs.json._

object XMLUtils {
  def getAttribute(node: Node, attribute: String) = (node \ ("@" + attribute)).text
  def getNodeText (node: Node, tag: String) = (node \ tag).text.trim
}

object IOUtils {
  def writeFile(path: Path, data: Array[Byte]): Unit = {
    if(path.getParent != null) Files.createDirectories(path.getParent)
    Files.write(path, data)
  }
  def writeFile(path: Path, data: String): Unit = writeFile(path, data.getBytes(StandardCharsets.UTF_8))

  def readFileAsBytes(path: Path) = Files.readAllBytes(path)
  def readFileAsString(path: Path) = new String(readFileAsBytes(path), StandardCharsets.UTF_8)

  def listFiles(path: Path) = Files.list(path).toArray.map(_.asInstanceOf[Path])
  def listFileNames(path: Path) = listFiles(path).map(_.getFileName.toString)

  val xmlWriter = new PrettyPrinter(Int.MaxValue, 4)
  def writeXML(path: Path, xml: Node, prettyPrint: Boolean = true) = {
    val xmlString = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"+
      "<!-- Generated by Multiverse Mod Manager -->\n"+
      (if(prettyPrint) xmlWriter.format(xml) else xml.toString)+"\n"
    writeFile(path, xmlString)
  }
  def readXML(path: Path) = XML.load(Files.newInputStream(path))

  def writeJson(path: Path, json: JsValue) = writeFile(path, Json.prettyPrint(json))
  def readJson(path: Path) = Json.parse(readFileAsString(path))
}