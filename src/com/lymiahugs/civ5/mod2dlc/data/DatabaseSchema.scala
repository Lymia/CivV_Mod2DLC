/*
 * Copyright (C) 2014 Lymia Aluysia <lymiahugs@gmail.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished to do
 * so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package com.lymiahugs.civ5.mod2dlc.data

/*
  Generated using the following Lua code, then manually edited:
  
  local accum = ""
  local function print_code(str)
    accum = accum .. str .. "\n"
  end
  print_code("")
  print_code("val database_schema = Map[String, SQLTable](")
  for row in DB.Query [[select * from sqlite_master where type="table"]] do
    local table_name = row.tbl_name
    print_code("  \""..table_name.."\" -> SQLTable(\""..table_name.."\",")
    for column in DB.Query("pragma table_info("..table_name..")") do
      print_code("    SQLColumn(\""..column.name.."\", \""..column.type.."\"),")
    end
    print_code("  ),")
  end
  print_code(")")
  print(accum)
*/
object DatabaseSchema {
  case class SQLColumn(name: String, columnType: String)
  case class SQLTable(name: String, columns: SQLColumn*)
  
  val database_schema = Map[String, SQLTable](
    "ScannedFiles" -> SQLTable("ScannedFiles",
      SQLColumn("Path", "TEXT"),
      SQLColumn("DateTime", "INTEGER")),
    "ArtDefine_UnitInfos" -> SQLTable("ArtDefine_UnitInfos",
      SQLColumn("Type", "TEXT"),
      SQLColumn("DamageStates", "INT"),
      SQLColumn("Formation", "TEXT"),
      SQLColumn("UnitFlagAtlas", "TEXT"),
      SQLColumn("UnitFlagIconOffset", "INT"),
      SQLColumn("IconAtlas", "TEXT"),
      SQLColumn("PortraitIndex", "INT")),
    "ArtDefine_UnitInfoMemberInfos" -> SQLTable("ArtDefine_UnitInfoMemberInfos",
      SQLColumn("UnitInfoType", "TEXT"),
      SQLColumn("UnitMemberInfoType", "TEXT"),
      SQLColumn("NumMembers", "INT")),
    "ArtDefine_UnitMemberInfos" -> SQLTable("ArtDefine_UnitMemberInfos",
      SQLColumn("Type", "TEXT"),
      SQLColumn("Scale", "FLOAT"),
      SQLColumn("ZOffset", "FLOAT"),
      SQLColumn("Domain", "TEXT"),
      SQLColumn("Model", "TEXT"),
      SQLColumn("MaterialTypeTag", "TEXT"),
      SQLColumn("MaterialTypeSoundOverrideTag", "TEXT")),
    "ArtDefine_UnitMemberCombats" -> SQLTable("ArtDefine_UnitMemberCombats",
      SQLColumn("UnitMemberType", "TEXT"),
      SQLColumn("EnableActions", "TEXT"),
      SQLColumn("DisableActions", "TEXT"),
      SQLColumn("MoveRadius", "FLOAT"),
      SQLColumn("ShortMoveRadius", "FLOAT"),
      SQLColumn("ChargeRadius", "FLOAT"),
      SQLColumn("AttackRadius", "FLOAT"),
      SQLColumn("RangedAttackRadius", "FLOAT"),
      SQLColumn("MoveRate", "FLOAT"),
      SQLColumn("ShortMoveRate", "FLOAT"),
      SQLColumn("TurnRateMin", "FLOAT"),
      SQLColumn("TurnRateMax", "FLOAT"),
      SQLColumn("TurnFacingRateMin", "FLOAT"),
      SQLColumn("TurnFacingRateMax", "FLOAT"),
      SQLColumn("RollRateMin", "FLOAT"),
      SQLColumn("RollRateMax", "FLOAT"),
      SQLColumn("PitchRateMin", "FLOAT"),
      SQLColumn("PitchRateMax", "FLOAT"),
      SQLColumn("LOSRadiusScale", "FLOAT"),
      SQLColumn("TargetRadius", "FLOAT"),
      SQLColumn("TargetHeight", "FLOAT"),
      SQLColumn("HasShortRangedAttack", "INTEGER"),
      SQLColumn("HasLongRangedAttack", "INTEGER"),
      SQLColumn("HasLeftRightAttack", "INTEGER"),
      SQLColumn("HasStationaryMelee", "INTEGER"),
      SQLColumn("HasStationaryRangedAttack", "INTEGER"),
      SQLColumn("HasRefaceAfterCombat", "INTEGER"),
      SQLColumn("ReformBeforeCombat", "INTEGER"),
      SQLColumn("HasIndependentWeaponFacing", "INTEGER"),
      SQLColumn("HasOpponentTracking", "INTEGER"),
      SQLColumn("HasCollisionAttack", "INTEGER"),
      SQLColumn("AttackAltitude", "FLOAT"),
      SQLColumn("AltitudeDecelerationDistance", "FLOAT"),
      SQLColumn("OnlyTurnInMovementActions", "INTEGER"),
      SQLColumn("RushAttackFormation", "TEXT"),
      SQLColumn("LastToDie", "INTEGER")),
    "ArtDefine_UnitMemberCombatWeapons" -> SQLTable("ArtDefine_UnitMemberCombatWeapons",
      SQLColumn("UnitMemberType", "TEXT"),
      SQLColumn("Index", "INTEGER"),
      SQLColumn("SubIndex", "INTEGER"),
      SQLColumn("ID", "TEXT"),
      SQLColumn("VisKillStrengthMin", "FLOAT"),
      SQLColumn("VisKillStrengthMax", "FLOAT"),
      SQLColumn("ProjectileSpeed", "FLOAT"),
      SQLColumn("ProjectileTurnRateMin", "FLOAT"),
      SQLColumn("ProjectileTurnRateMax", "FLOAT"),
      SQLColumn("HitEffect", "TEXT"),
      SQLColumn("HitEffectScale", "FLOAT"),
      SQLColumn("HitRadius", "FLOAT"),
      SQLColumn("ProjectileChildEffectScale", "FLOAT"),
      SQLColumn("AreaDamageDelay", "FLOAT"),
      SQLColumn("ContinuousFire", "INTEGER"),
      SQLColumn("WaitForEffectCompletion", "INTEGER"),
      SQLColumn("TargetGround", "INTEGER"),
      SQLColumn("IsDropped", "INTEGER"),
      SQLColumn("WeaponTypeTag", "TEXT"),
      SQLColumn("WeaponTypeSoundOverrideTag", "TEXT"),
      SQLColumn("MissTargetSlopRadius", "FLOAT")),
    "ArtDefine_LandmarkTypes" -> SQLTable("ArtDefine_LandmarkTypes",
      SQLColumn("Type", "TEXT"),
      SQLColumn("LandmarkType", "TEXT"),
      SQLColumn("FriendlyName", "TEXT")),
    "ArtDefine_Landmarks" -> SQLTable("ArtDefine_Landmarks",
      SQLColumn("Era", "TEXT"),
      SQLColumn("State", "TEXT"),
      SQLColumn("Scale", "FLOAT"),
      SQLColumn("ImprovementType", "TEXT"),
      SQLColumn("LayoutHandler", "TEXT"),
      SQLColumn("ResourceType", "TEXT"),
      SQLColumn("Model", "TEXT"),
      SQLColumn("TerrainContour", "INTEGER"),
      SQLColumn("Tech", "TEXT")),
    "ArtDefine_StrategicView" -> SQLTable("ArtDefine_StrategicView",
      SQLColumn("StrategicViewType", "TEXT"),
      SQLColumn("TileType", "TEXT"),
      SQLColumn("Asset", "TEXT")),
    "DownloadableContent" -> SQLTable("DownloadableContent",
      SQLColumn("PackageID", "TEXT"),
      SQLColumn("FriendlyNameKey", "TEXT"),
      SQLColumn("DescriptionKey", "TEXT"),
      SQLColumn("Version", "INTEGER"),
      SQLColumn("IsFiraxisContent", "INTEGER"),
      SQLColumn("IsActive", "INTEGER"),
      SQLColumn("IsBaseContentUpgrade", "INTEGER")),
    "Map_Folders" -> SQLTable("Map_Folders",
      SQLColumn("Type", "TEXT"),
      SQLColumn("ParentType", "TEXT"),
      SQLColumn("Title", "TEXT"),
      SQLColumn("Description", "TEXT"),
      SQLColumn("IconIndex", "INTEGER"),
      SQLColumn("IconAtlas", "TEXT")),
    "Map_Sizes" -> SQLTable("Map_Sizes",
      SQLColumn("MapType", "TEXT"),
      SQLColumn("WorldSizeType", "TEXT"),
      SQLColumn("FileName", "TEXT")),
    "Maps" -> SQLTable("Maps",
      SQLColumn("Type", "TEXT"),
      SQLColumn("Name", "TEXT"),
      SQLColumn("Description", "TEXT"),
      SQLColumn("FolderType", "TEXT"),
      SQLColumn("IconIndex", "INTEGER"),
      SQLColumn("IconAtlas", "TEXT")),
    "MapScripts" -> SQLTable("MapScripts",
      SQLColumn("FileName", "TEXT"),
      SQLColumn("Name", "TEXT"),
      SQLColumn("Description", "TEXT"),
      SQLColumn("IsAdvancedMap", "INTEGER"),
      SQLColumn("SupportsSinglePlayer", "INTEGER"),
      SQLColumn("SupportsMultiplayer", "INTEGER"),
      SQLColumn("DefaultCityStates", "INTEGER"),
      SQLColumn("Hidden", "INTEGER"),
      SQLColumn("IconIndex", "INTEGER"),
      SQLColumn("IconAtlas", "TEXT"),
      SQLColumn("FolderType", "TEXT")),
    "MapScriptOptions" -> SQLTable("MapScriptOptions",
      SQLColumn("FileName", "TEXT"),
      SQLColumn("OptionID", "TEXT"),
      SQLColumn("Name", "TEXT"),
      SQLColumn("Description", "TEXT"),
      SQLColumn("ReadOnly", "INTEGER"),
      SQLColumn("Hidden", "INTEGER"),
      SQLColumn("DefaultValue", "INTEGER"),
      SQLColumn("SortPriority", "INTEGER")),
    "MapScriptOptionPossibleValues" -> SQLTable("MapScriptOptionPossibleValues",
      SQLColumn("FileName", "TEXT"),
      SQLColumn("OptionID", "TEXT"),
      SQLColumn("Name", "TEXT"),
      SQLColumn("Description", "TEXT"),
      SQLColumn("Value", "INTEGER"),
      SQLColumn("SortIndex", "INTEGER")),
    "MapScriptRequiredDLC" -> SQLTable("MapScriptRequiredDLC",
      SQLColumn("FileName", "TEXT"),
      SQLColumn("PackageID", "TEXT")),
    "ApplicationInfo" -> SQLTable("ApplicationInfo",
      SQLColumn("Version", "TEXT")),
    "Audio_SpeakerChannels" -> SQLTable("Audio_SpeakerChannels",
      SQLColumn("SpeakerChannel", "TEXT"),
      SQLColumn("Value", "INTEGER")),
    "Audio_SoundTypes" -> SQLTable("Audio_SoundTypes",
      SQLColumn("SoundType", "TEXT")),
    "Audio_SoundLoadTypes" -> SQLTable("Audio_SoundLoadTypes",
      SQLColumn("SoundLoadType", "TEXT"),
      SQLColumn("Value", "INTEGER")),
    "Audio_ScriptTypes" -> SQLTable("Audio_ScriptTypes",
      SQLColumn("ScriptType", "TEXT"),
      SQLColumn("Value", "INTEGER")),
    "Audio_Sounds" -> SQLTable("Audio_Sounds",
      SQLColumn("SoundID", "TEXT"),
      SQLColumn("FileName", "TEXT"),
      SQLColumn("LoadType", "TEXT"),
      SQLColumn("OnlyLoadOneVariationEachTime", "INTEGER"),
      SQLColumn("DontCache", "INTEGER")),
    "Audio_3DSounds" -> SQLTable("Audio_3DSounds",
      SQLColumn("ScriptID", "TEXT"),
      SQLColumn("SoundID", "TEXT"),
      SQLColumn("SoundType", "TEXT"),
      SQLColumn("MaxVolume", "INTEGER"),
      SQLColumn("MinVolume", "INTEGER"),
      SQLColumn("Looping", "INTEGER"),
      SQLColumn("DryLevel", "REAL"),
      SQLColumn("WetLevel", "REAL"),
      SQLColumn("StartFromRandomPosition", "INTEGER"),
      SQLColumn("DontPlayMoreThan", "INTEGER"),
      SQLColumn("OnlyTriggerOnUnitRuns", "INTEGER"),
      SQLColumn("PercentChanceOfPlaying", "INTEGER"),
      SQLColumn("DontPlay", "INTEGER"),
      SQLColumn("DontTriggerDuplicates", "INTEGER"),
      SQLColumn("DontTriggerDuplicatesOnUnits", "INTEGER"),
      SQLColumn("MinTimeMustNotPlayAgain", "INTEGER"),
      SQLColumn("MaxTimeMustNotPlayAgain", "INTEGER"),
      SQLColumn("IsMusic", "INTEGER"),
      SQLColumn("MinTimeDelay", "INTEGER"),
      SQLColumn("MaxTimeDelay", "INTEGER"),
      SQLColumn("TaperSoundtrackVolume", "REAL"),
      SQLColumn("PitchChangeDown", "INTEGER"),
      SQLColumn("PitchChangeUp", "INTEGER"),
      SQLColumn("Priority", "INTEGER"),
      SQLColumn("StartPosition", "TEXT"),
      SQLColumn("EndPosition", "TEXT"),
      SQLColumn("Channel", "TEXT"),
      SQLColumn("MinVelocity", "INTEGER"),
      SQLColumn("MaxVelocity", "INTEGER"),
      SQLColumn("DistanceFromListener", "REAL"),
      SQLColumn("MinDistance", "REAL"),
      SQLColumn("CutoffDistance", "REAL")),
    "Audio_2DSounds" -> SQLTable("Audio_2DSounds",
      SQLColumn("ScriptID", "TEXT"),
      SQLColumn("SoundID", "TEXT"),
      SQLColumn("SoundType", "TEXT"),
      SQLColumn("MaxVolume", "INTEGER"),
      SQLColumn("MinVolume", "INTEGER"),
      SQLColumn("Looping", "INTEGER"),
      SQLColumn("DryLevel", "REAL"),
      SQLColumn("WetLevel", "REAL"),
      SQLColumn("StartFromRandomPosition", "INTEGER"),
      SQLColumn("DontPlayMoreThan", "INTEGER"),
      SQLColumn("OnlyTriggerOnUnitRuns", "INTEGER"),
      SQLColumn("PercentChanceOfPlaying", "INTEGER"),
      SQLColumn("DontPlay", "INTEGER"),
      SQLColumn("DontTriggerDuplicates", "INTEGER"),
      SQLColumn("DontTriggerDuplicatesOnUnits", "INTEGER"),
      SQLColumn("MinTimeMustNotPlayAgain", "INTEGER"),
      SQLColumn("MaxTimeMustNotPlayAgain", "INTEGER"),
      SQLColumn("IsMusic", "INTEGER"),
      SQLColumn("MinTimeDelay", "INTEGER"),
      SQLColumn("MaxTimeDelay", "INTEGER"),
      SQLColumn("TaperSoundtrackVolume", "REAL"),
      SQLColumn("PitchChangeDown", "INTEGER"),
      SQLColumn("PitchChangeUp", "INTEGER"),
      SQLColumn("Priority", "INTEGER"),
      SQLColumn("MinRightPan", "INTEGER"),
      SQLColumn("MaxRightPan", "INTEGER"),
      SQLColumn("MinLeftPan", "INTEGER"),
      SQLColumn("MaxLeftPan", "INTEGER")),
    "Audio_SoundScapes" -> SQLTable("Audio_SoundScapes",
      SQLColumn("ScriptID", "TEXT"),
      SQLColumn("MinVolume", "INTEGER"),
      SQLColumn("MaxVolume", "INTEGER"),
      SQLColumn("MinGridDistance", "REAL"),
      SQLColumn("MaxGridDistance", "REAL"),
      SQLColumn("Priority", "REAL")),
    "Audio_SoundScapeElements" -> SQLTable("Audio_SoundScapeElements",
      SQLColumn("ScriptID", "TEXT"),
      SQLColumn("SoundScapeIndex", "INTEGER"),
      SQLColumn("ScriptType", "TEXT"),
      SQLColumn("MinTimeMustNotPlayAgain", "INTEGER"),
      SQLColumn("MaxTimeMustNotPlayAgain", "INTEGER"),
      SQLColumn("IsSoundBed", "INTEGER")),
    "Audio_SoundScapeElementScripts" -> SQLTable("Audio_SoundScapeElementScripts",
      SQLColumn("SoundScapeScriptID", "TEXT"),
      SQLColumn("SoundScapeIndex", "INTEGER"),
      SQLColumn("ScriptIndex", "INTEGER"),
      SQLColumn("ScriptID", "TEXT")),
    "Defines" -> SQLTable("Defines",
      SQLColumn("Name", "text"),
      SQLColumn("Value", "variant")),
    "PostDefines" -> SQLTable("PostDefines",
      SQLColumn("Name", "text"),
      SQLColumn("Key", "text"),
      SQLColumn("Table", "text")),
    "AICityStrategies" -> SQLTable("AICityStrategies",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("CheckTriggerTurnCount", "integer"),
      SQLColumn("MinimumNumTurnsExecuted", "integer"),
      SQLColumn("WeightThreshold", "integer"),
      SQLColumn("NoMinorCivs", "boolean"),
      SQLColumn("Permanent", "boolean"),
      SQLColumn("TechPrereq", "text"),
      SQLColumn("TechObsolete", "text"),
      SQLColumn("Advisor", "text"),
      SQLColumn("AdvisorCounsel", "text"),
      SQLColumn("AdvisorCounselImportance", "integer")),
    "sqlite_sequence" -> SQLTable("sqlite_sequence",
      SQLColumn("name", ""),
      SQLColumn("seq", "")),
    "AICityStrategy_Flavors" -> SQLTable("AICityStrategy_Flavors",
      SQLColumn("AICityStrategyType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "AICityStrategy_PersonalityFlavorThresholdMods" -> SQLTable("AICityStrategy_PersonalityFlavorThresholdMods",
      SQLColumn("AICityStrategyType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "AIGrandStrategies" -> SQLTable("AIGrandStrategies",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text")),
    "AIGrandStrategy_Flavors" -> SQLTable("AIGrandStrategy_Flavors",
      SQLColumn("AIGrandStrategyType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "AIGrandStrategy_Yields" -> SQLTable("AIGrandStrategy_Yields",
      SQLColumn("AIGrandStrategyType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "AIGrandStrategy_FlavorMods" -> SQLTable("AIGrandStrategy_FlavorMods",
      SQLColumn("AIGrandStrategyType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "AIEconomicStrategies" -> SQLTable("AIEconomicStrategies",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("NoMinorCivs", "boolean"),
      SQLColumn("CheckTriggerTurnCount", "integer"),
      SQLColumn("MinimumNumTurnsExecuted", "integer"),
      SQLColumn("WeightThreshold", "integer"),
      SQLColumn("FirstTurnExecuted", "integer"),
      SQLColumn("TechPrereq", "text"),
      SQLColumn("TechObsolete", "text"),
      SQLColumn("Advisor", "text"),
      SQLColumn("AdvisorCounsel", "text"),
      SQLColumn("AdvisorCounselImportance", "integer")),
    "AIEconomicStrategy_Player_Flavors" -> SQLTable("AIEconomicStrategy_Player_Flavors",
      SQLColumn("AIEconomicStrategyType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "AIEconomicStrategy_City_Flavors" -> SQLTable("AIEconomicStrategy_City_Flavors",
      SQLColumn("AIEconomicStrategyType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "AIEconomicStrategy_PersonalityFlavorThresholdMods" -> SQLTable("AIEconomicStrategy_PersonalityFlavorThresholdMods",
      SQLColumn("AIEconomicStrategyType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "AIMilitaryStrategies" -> SQLTable("AIMilitaryStrategies",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("NoMinorCivs", "boolean"),
      SQLColumn("OnlyMinorCivs", "boolean"),
      SQLColumn("UpdateCitySpecializations", "boolean"),
      SQLColumn("CheckTriggerTurnCount", "integer"),
      SQLColumn("FirstTurnExecuted", "integer"),
      SQLColumn("MinimumNumTurnsExecuted", "integer"),
      SQLColumn("WeightThreshold", "integer"),
      SQLColumn("TechObsolete", "text"),
      SQLColumn("TechPrereq", "text"),
      SQLColumn("Advisor", "text"),
      SQLColumn("AdvisorCounsel", "text"),
      SQLColumn("AdvisorCounselImportance", "integer")),
    "AIMilitaryStrategy_Player_Flavors" -> SQLTable("AIMilitaryStrategy_Player_Flavors",
      SQLColumn("AIMilitaryStrategyType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "AIMilitaryStrategy_City_Flavors" -> SQLTable("AIMilitaryStrategy_City_Flavors",
      SQLColumn("AIMilitaryStrategyType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "AIMilitaryStrategy_PersonalityFlavorThresholdMods" -> SQLTable("AIMilitaryStrategy_PersonalityFlavorThresholdMods",
      SQLColumn("AIMilitaryStrategyType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "CitySpecializations" -> SQLTable("CitySpecializations",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Subtype", "integer"),
      SQLColumn("MustBeCoastal", "boolean"),
      SQLColumn("IsWonder", "boolean"),
      SQLColumn("IsDefault", "boolean"),
      SQLColumn("IsOperationUnitProvider", "boolean")),
    "CitySpecialization_Flavors" -> SQLTable("CitySpecialization_Flavors",
      SQLColumn("CitySpecializationType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "CitySpecialization_TargetYields" -> SQLTable("CitySpecialization_TargetYields",
      SQLColumn("CitySpecializationType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "TacticalMoves" -> SQLTable("TacticalMoves",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("OperationsCanRecruit", "boolean"),
      SQLColumn("DominanceZoneMove", "boolean"),
      SQLColumn("OffenseFlavorWeight", "integer"),
      SQLColumn("DefenseFlavorWeight", "integer"),
      SQLColumn("Priority", "integer")),
    "Attitudes" -> SQLTable("Attitudes",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text")),
    "Calendars" -> SQLTable("Calendars",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text")),
    "CitySizes" -> SQLTable("CitySizes",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text")),
    "Concepts" -> SQLTable("Concepts",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Topic", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Summary", "text"),
      SQLColumn("AdvisorQuestion", "text"),
      SQLColumn("Advisor", "text"),
      SQLColumn("CivilopediaPage", "integer"),
      SQLColumn("CivilopediaPageText", "text"),
      SQLColumn("CivilopediaHeaderType", "text"),
      SQLColumn("InsertAfter", "text"),
      SQLColumn("InsertBefore", "text")),
    "Concepts_RelatedConcept" -> SQLTable("Concepts_RelatedConcept",
      SQLColumn("ConceptType", "text"),
      SQLColumn("RelatedConcept", "text")),
    "Contacts" -> SQLTable("Contacts",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text")),
    "DenialInfos" -> SQLTable("DenialInfos",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text")),
    "Domains" -> SQLTable("Domains",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text")),
    "InvisibleInfos" -> SQLTable("InvisibleInfos",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text")),
    "MajorCivApproachTypes" -> SQLTable("MajorCivApproachTypes",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text")),
    "MemoryInfos" -> SQLTable("MemoryInfos",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text")),
    "MinorCivApproachTypes" -> SQLTable("MinorCivApproachTypes",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text")),
    "MinorCivTraits" -> SQLTable("MinorCivTraits",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("TraitIcon", "text"),
      SQLColumn("TraitTitleIcon", "text"),
      SQLColumn("BackgroundImage", "text")),
    "MinorCivTraits_Status" -> SQLTable("MinorCivTraits_Status",
      SQLColumn("Type", "text"),
      SQLColumn("StatusIcon", "text"),
      SQLColumn("PositiveStatusMeter", "text"),
      SQLColumn("NegativeStatusMeter", "text"),
      SQLColumn("StatusMeterIconAtlasIndex", "integer")),
    "Months" -> SQLTable("Months",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text")),
    "Seasons" -> SQLTable("Seasons",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text")),
    "UnitAIInfos" -> SQLTable("UnitAIInfos",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text")),
    "UnitCombatInfos" -> SQLTable("UnitCombatInfos",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text")),
    "BuildingClasses" -> SQLTable("BuildingClasses",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("DefaultBuilding", "text"),
      SQLColumn("MaxGlobalInstances", "integer"),
      SQLColumn("MaxTeamInstances", "integer"),
      SQLColumn("MaxPlayerInstances", "integer"),
      SQLColumn("ExtraPlayerInstances", "integer"),
      SQLColumn("NoLimit", "boolean"),
      SQLColumn("Monument", "boolean")),
    "BuildingClass_VictoryThresholds" -> SQLTable("BuildingClass_VictoryThresholds",
      SQLColumn("BuildingClassType", "text"),
      SQLColumn("VictoryType", "text"),
      SQLColumn("Threshold", "integer")),
    "Buildings" -> SQLTable("Buildings",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("Strategy", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("ThemingBonusHelp", "text"),
      SQLColumn("Quote", "text"),
      SQLColumn("GoldMaintenance", "integer"),
      SQLColumn("MutuallyExclusiveGroup", "integer"),
      SQLColumn("TeamShare", "boolean"),
      SQLColumn("Water", "boolean"),
      SQLColumn("River", "boolean"),
      SQLColumn("FreshWater", "boolean"),
      SQLColumn("Mountain", "boolean"),
      SQLColumn("NearbyMountainRequired", "boolean"),
      SQLColumn("Hill", "boolean"),
      SQLColumn("Flat", "boolean"),
      SQLColumn("FoundsReligion", "boolean"),
      SQLColumn("IsReligious", "boolean"),
      SQLColumn("BorderObstacle", "boolean"),
      SQLColumn("PlayerBorderObstacle", "boolean"),
      SQLColumn("Capital", "boolean"),
      SQLColumn("GoldenAge", "boolean"),
      SQLColumn("MapCentering", "boolean"),
      SQLColumn("NeverCapture", "boolean"),
      SQLColumn("NukeImmune", "boolean"),
      SQLColumn("AllowsWaterRoutes", "boolean"),
      SQLColumn("ExtraLuxuries", "boolean"),
      SQLColumn("DiplomaticVoting", "boolean"),
      SQLColumn("AffectSpiesNow", "boolean"),
      SQLColumn("NullifyInfluenceModifier", "boolean"),
      SQLColumn("Cost", "integer"),
      SQLColumn("FaithCost", "integer"),
      SQLColumn("LeagueCost", "integer"),
      SQLColumn("UnlockedByBelief", "boolean"),
      SQLColumn("UnlockedByLeague", "boolean"),
      SQLColumn("HolyCity", "boolean"),
      SQLColumn("NumCityCostMod", "integer"),
      SQLColumn("HurryCostModifier", "integer"),
      SQLColumn("MinAreaSize", "integer"),
      SQLColumn("ConquestProb", "integer"),
      SQLColumn("CitiesPrereq", "integer"),
      SQLColumn("LevelPrereq", "integer"),
      SQLColumn("CultureRateModifier", "integer"),
      SQLColumn("GlobalCultureRateModifier", "integer"),
      SQLColumn("GreatPeopleRateModifier", "integer"),
      SQLColumn("GlobalGreatPeopleRateModifier", "integer"),
      SQLColumn("GreatGeneralRateModifier", "integer"),
      SQLColumn("GreatPersonExpendGold", "integer"),
      SQLColumn("GoldenAgeModifier", "integer"),
      SQLColumn("UnitUpgradeCostMod", "integer"),
      SQLColumn("Experience", "integer"),
      SQLColumn("GlobalExperience", "integer"),
      SQLColumn("FoodKept", "integer"),
      SQLColumn("Airlift", "boolean"),
      SQLColumn("AirModifier", "integer"),
      SQLColumn("NukeModifier", "integer"),
      SQLColumn("NukeExplosionRand", "integer"),
      SQLColumn("HealRateChange", "integer"),
      SQLColumn("Happiness", "integer"),
      SQLColumn("UnmoddedHappiness", "integer"),
      SQLColumn("UnhappinessModifier", "integer"),
      SQLColumn("HappinessPerCity", "integer"),
      SQLColumn("HappinessPerXPolicies", "integer"),
      SQLColumn("CityCountUnhappinessMod", "integer"),
      SQLColumn("NoOccupiedUnhappiness", "boolean"),
      SQLColumn("WorkerSpeedModifier", "integer"),
      SQLColumn("MilitaryProductionModifier", "integer"),
      SQLColumn("SpaceProductionModifier", "integer"),
      SQLColumn("GlobalSpaceProductionModifier", "integer"),
      SQLColumn("BuildingProductionModifier", "integer"),
      SQLColumn("WonderProductionModifier", "integer"),
      SQLColumn("CityConnectionTradeRouteModifier", "integer"),
      SQLColumn("CapturePlunderModifier", "integer"),
      SQLColumn("PolicyCostModifier", "integer"),
      SQLColumn("PlotCultureCostModifier", "integer"),
      SQLColumn("GlobalPlotCultureCostModifier", "integer"),
      SQLColumn("PlotBuyCostModifier", "integer"),
      SQLColumn("GlobalPlotBuyCostModifier", "integer"),
      SQLColumn("GlobalPopulationChange", "integer"),
      SQLColumn("TechShare", "integer"),
      SQLColumn("FreeTechs", "integer"),
      SQLColumn("FreePolicies", "integer"),
      SQLColumn("FreeGreatPeople", "integer"),
      SQLColumn("MedianTechPercentChange", "integer"),
      SQLColumn("Gold", "integer"),
      SQLColumn("AllowsRangeStrike", "boolean"),
      SQLColumn("Espionage", "boolean"),
      SQLColumn("AllowsFoodTradeRoutes", "boolean"),
      SQLColumn("AllowsProductionTradeRoutes", "boolean"),
      SQLColumn("Defense", "integer"),
      SQLColumn("ExtraCityHitPoints", "integer"),
      SQLColumn("GlobalDefenseMod", "integer"),
      SQLColumn("MinorFriendshipChange", "integer"),
      SQLColumn("VictoryPoints", "integer"),
      SQLColumn("ExtraMissionarySpreads", "integer"),
      SQLColumn("ReligiousPressureModifier", "integer"),
      SQLColumn("EspionageModifier", "integer"),
      SQLColumn("GlobalEspionageModifier", "integer"),
      SQLColumn("ExtraSpies", "integer"),
      SQLColumn("SpyRankChange", "integer"),
      SQLColumn("InstantSpyRankChange", "integer"),
      SQLColumn("TradeRouteRecipientBonus", "integer"),
      SQLColumn("TradeRouteTargetBonus", "integer"),
      SQLColumn("NumTradeRouteBonus", "integer"),
      SQLColumn("LandmarksTourismPercent", "integer"),
      SQLColumn("InstantMilitaryIncrease", "integer"),
      SQLColumn("GreatWorksTourismModifier", "integer"),
      SQLColumn("XBuiltTriggersIdeologyChoice", "integer"),
      SQLColumn("TradeRouteSeaDistanceModifier", "integer"),
      SQLColumn("TradeRouteSeaGoldBonus", "integer"),
      SQLColumn("TradeRouteLandDistanceModifier", "integer"),
      SQLColumn("TradeRouteLandGoldBonus", "integer"),
      SQLColumn("CityStateTradeRouteProductionModifier", "integer"),
      SQLColumn("GreatScientistBeakerModifier", "integer"),
      SQLColumn("BuildingClass", "text"),
      SQLColumn("ArtDefineTag", "text"),
      SQLColumn("NearbyTerrainRequired", "text"),
      SQLColumn("ProhibitedCityTerrain", "text"),
      SQLColumn("VictoryPrereq", "text"),
      SQLColumn("FreeStartEra", "text"),
      SQLColumn("MaxStartEra", "text"),
      SQLColumn("ObsoleteTech", "text"),
      SQLColumn("EnhancedYieldTech", "text"),
      SQLColumn("TechEnhancedTourism", "integer"),
      SQLColumn("FreeBuilding", "text"),
      SQLColumn("FreeBuildingThisCity", "text"),
      SQLColumn("FreePromotion", "text"),
      SQLColumn("TrainedFreePromotion", "text"),
      SQLColumn("FreePromotionRemoved", "text"),
      SQLColumn("ReplacementBuildingClass", "text"),
      SQLColumn("PrereqTech", "text"),
      SQLColumn("PolicyBranchType", "text"),
      SQLColumn("SpecialistType", "text"),
      SQLColumn("SpecialistCount", "integer"),
      SQLColumn("GreatWorkSlotType", "text"),
      SQLColumn("FreeGreatWork", "text"),
      SQLColumn("GreatWorkCount", "integer"),
      SQLColumn("SpecialistExtraCulture", "integer"),
      SQLColumn("GreatPeopleRateChange", "integer"),
      SQLColumn("ExtraLeagueVotes", "integer"),
      SQLColumn("CityWall", "boolean"),
      SQLColumn("DisplayPosition", "integer"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("WonderSplashImage", "text"),
      SQLColumn("WonderSplashAnchor", "text"),
      SQLColumn("WonderSplashAudio", "text"),
      SQLColumn("IconAtlas", "text"),
      SQLColumn("ArtInfoCulturalVariation", "boolean"),
      SQLColumn("ArtInfoEraVariation", "boolean"),
      SQLColumn("ArtInfoRandomVariation", "boolean")),
    "Building_AreaYieldModifiers" -> SQLTable("Building_AreaYieldModifiers",
      SQLColumn("BuildingType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_BuildingClassHappiness" -> SQLTable("Building_BuildingClassHappiness",
      SQLColumn("BuildingType", "text"),
      SQLColumn("BuildingClassType", "text"),
      SQLColumn("Happiness", "integer")),
    "Building_BuildingClassYieldChanges" -> SQLTable("Building_BuildingClassYieldChanges",
      SQLColumn("BuildingType", "text"),
      SQLColumn("BuildingClassType", "text"),
      SQLColumn("YieldType", "integer"),
      SQLColumn("YieldChange", "integer")),
    "Building_ClassesNeededInCity" -> SQLTable("Building_ClassesNeededInCity",
      SQLColumn("BuildingType", "text"),
      SQLColumn("BuildingClassType", "text")),
    "Building_FreeUnits" -> SQLTable("Building_FreeUnits",
      SQLColumn("BuildingType", "text"),
      SQLColumn("UnitType", "text"),
      SQLColumn("NumUnits", "integer")),
    "Building_DomainFreeExperiences" -> SQLTable("Building_DomainFreeExperiences",
      SQLColumn("BuildingType", "text"),
      SQLColumn("DomainType", "text"),
      SQLColumn("Experience", "integer")),
    "Building_DomainFreeExperiencePerGreatWork" -> SQLTable("Building_DomainFreeExperiencePerGreatWork",
      SQLColumn("BuildingType", "text"),
      SQLColumn("DomainType", "text"),
      SQLColumn("Experience", "integer")),
    "Building_DomainProductionModifiers" -> SQLTable("Building_DomainProductionModifiers",
      SQLColumn("BuildingType", "text"),
      SQLColumn("DomainType", "text"),
      SQLColumn("Modifier", "integer")),
    "Building_FreeSpecialistCounts" -> SQLTable("Building_FreeSpecialistCounts",
      SQLColumn("BuildingType", "text"),
      SQLColumn("SpecialistType", "text"),
      SQLColumn("Count", "integer")),
    "Building_Flavors" -> SQLTable("Building_Flavors",
      SQLColumn("BuildingType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "Building_GlobalYieldModifiers" -> SQLTable("Building_GlobalYieldModifiers",
      SQLColumn("BuildingType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_HurryModifiers" -> SQLTable("Building_HurryModifiers",
      SQLColumn("BuildingType", "text"),
      SQLColumn("HurryType", "text"),
      SQLColumn("HurryCostModifier", "integer")),
    "Building_LocalResourceAnds" -> SQLTable("Building_LocalResourceAnds",
      SQLColumn("BuildingType", "text"),
      SQLColumn("ResourceType", "text")),
    "Building_LocalResourceOrs" -> SQLTable("Building_LocalResourceOrs",
      SQLColumn("BuildingType", "text"),
      SQLColumn("ResourceType", "text")),
    "Building_LockedBuildingClasses" -> SQLTable("Building_LockedBuildingClasses",
      SQLColumn("BuildingType", "text"),
      SQLColumn("BuildingClassType", "text")),
    "Building_PrereqBuildingClasses" -> SQLTable("Building_PrereqBuildingClasses",
      SQLColumn("BuildingType", "text"),
      SQLColumn("BuildingClassType", "text"),
      SQLColumn("NumBuildingNeeded", "integer")),
    "Building_ResourceQuantity" -> SQLTable("Building_ResourceQuantity",
      SQLColumn("BuildingType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("Quantity", "integer")),
    "Building_ResourceQuantityRequirements" -> SQLTable("Building_ResourceQuantityRequirements",
      SQLColumn("BuildingType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("Cost", "integer")),
    "Building_ResourceYieldModifiers" -> SQLTable("Building_ResourceYieldModifiers",
      SQLColumn("BuildingType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_ResourceCultureChanges" -> SQLTable("Building_ResourceCultureChanges",
      SQLColumn("BuildingType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("CultureChange", "integer")),
    "Building_ResourceFaithChanges" -> SQLTable("Building_ResourceFaithChanges",
      SQLColumn("BuildingType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("FaithChange", "integer")),
    "Building_RiverPlotYieldChanges" -> SQLTable("Building_RiverPlotYieldChanges",
      SQLColumn("BuildingType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_SeaPlotYieldChanges" -> SQLTable("Building_SeaPlotYieldChanges",
      SQLColumn("BuildingType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_LakePlotYieldChanges" -> SQLTable("Building_LakePlotYieldChanges",
      SQLColumn("BuildingType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_SeaResourceYieldChanges" -> SQLTable("Building_SeaResourceYieldChanges",
      SQLColumn("BuildingType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_ResourceYieldChanges" -> SQLTable("Building_ResourceYieldChanges",
      SQLColumn("BuildingType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_FeatureYieldChanges" -> SQLTable("Building_FeatureYieldChanges",
      SQLColumn("BuildingType", "text"),
      SQLColumn("FeatureType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_TerrainYieldChanges" -> SQLTable("Building_TerrainYieldChanges",
      SQLColumn("BuildingType", "text"),
      SQLColumn("TerrainType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_SpecialistYieldChanges" -> SQLTable("Building_SpecialistYieldChanges",
      SQLColumn("BuildingType", "text"),
      SQLColumn("SpecialistType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_UnitCombatFreeExperiences" -> SQLTable("Building_UnitCombatFreeExperiences",
      SQLColumn("BuildingType", "text"),
      SQLColumn("UnitCombatType", "text"),
      SQLColumn("Experience", "integer")),
    "Building_UnitCombatProductionModifiers" -> SQLTable("Building_UnitCombatProductionModifiers",
      SQLColumn("BuildingType", "text"),
      SQLColumn("UnitCombatType", "text"),
      SQLColumn("Modifier", "integer")),
    "Building_TechAndPrereqs" -> SQLTable("Building_TechAndPrereqs",
      SQLColumn("BuildingType", "text"),
      SQLColumn("TechType", "text")),
    "Building_YieldChanges" -> SQLTable("Building_YieldChanges",
      SQLColumn("BuildingType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_YieldChangesPerPop" -> SQLTable("Building_YieldChangesPerPop",
      SQLColumn("BuildingType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_YieldChangesPerReligion" -> SQLTable("Building_YieldChangesPerReligion",
      SQLColumn("BuildingType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_TechEnhancedYieldChanges" -> SQLTable("Building_TechEnhancedYieldChanges",
      SQLColumn("BuildingType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_YieldModifiers" -> SQLTable("Building_YieldModifiers",
      SQLColumn("BuildingType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Building_ThemingBonuses" -> SQLTable("Building_ThemingBonuses",
      SQLColumn("BuildingType", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Bonus", "integer"),
      SQLColumn("SameEra", "bool"),
      SQLColumn("UniqueEras", "bool"),
      SQLColumn("MustBeArt", "bool"),
      SQLColumn("MustBeArtifact", "bool"),
      SQLColumn("MustBeEqualArtArtifact", "bool"),
      SQLColumn("RequiresOwner", "bool"),
      SQLColumn("RequiresAnyButOwner", "bool"),
      SQLColumn("RequiresSamePlayer", "bool"),
      SQLColumn("RequiresUniquePlayers", "bool"),
      SQLColumn("AIPriority", "int")),
    "Civilizations" -> SQLTable("Civilizations",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("CivilopediaTag", "text"),
      SQLColumn("Strategy", "text"),
      SQLColumn("Playable", "boolean"),
      SQLColumn("AIPlayable", "boolean"),
      SQLColumn("ShortDescription", "text"),
      SQLColumn("Adjective", "text"),
      SQLColumn("DefaultPlayerColor", "text"),
      SQLColumn("ArtDefineTag", "text"),
      SQLColumn("ArtStyleType", "text"),
      SQLColumn("ArtStyleSuffix", "text"),
      SQLColumn("ArtStylePrefix", "text"),
      SQLColumn("DerivativeCiv", "text"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text"),
      SQLColumn("AlphaIconAtlas", "text"),
      SQLColumn("MapImage", "text"),
      SQLColumn("DawnOfManQuote", "text"),
      SQLColumn("DawnOfManImage", "text"),
      SQLColumn("DawnOfManAudio", "text"),
      SQLColumn("PackageID", "text"),
      SQLColumn("SoundtrackTag", "text")),
    "Civilization_BuildingClassOverrides" -> SQLTable("Civilization_BuildingClassOverrides",
      SQLColumn("CivilizationType", "text"),
      SQLColumn("BuildingClassType", "text"),
      SQLColumn("BuildingType", "text")),
    "Civilization_CityNames" -> SQLTable("Civilization_CityNames",
      SQLColumn("CivilizationType", "text"),
      SQLColumn("CityName", "text")),
    "Civilization_DisableTechs" -> SQLTable("Civilization_DisableTechs",
      SQLColumn("CivilizationType", "text"),
      SQLColumn("TechType", "text")),
    "Civilization_FreeBuildingClasses" -> SQLTable("Civilization_FreeBuildingClasses",
      SQLColumn("CivilizationType", "text"),
      SQLColumn("BuildingClassType", "text")),
    "Civilization_FreeTechs" -> SQLTable("Civilization_FreeTechs",
      SQLColumn("CivilizationType", "text"),
      SQLColumn("TechType", "text")),
    "Civilization_FreeUnits" -> SQLTable("Civilization_FreeUnits",
      SQLColumn("CivilizationType", "text"),
      SQLColumn("UnitClassType", "text"),
      SQLColumn("UnitAIType", "text"),
      SQLColumn("Count", "integer")),
    "Civilization_Leaders" -> SQLTable("Civilization_Leaders",
      SQLColumn("CivilizationType", "text"),
      SQLColumn("LeaderheadType", "text")),
    "Civilization_Religions" -> SQLTable("Civilization_Religions",
      SQLColumn("CivilizationType", "text"),
      SQLColumn("ReligionType", "text")),
    "Civilization_SpyNames" -> SQLTable("Civilization_SpyNames",
      SQLColumn("CivilizationType", "text"),
      SQLColumn("SpyName", "text")),
    "Civilization_UnitClassOverrides" -> SQLTable("Civilization_UnitClassOverrides",
      SQLColumn("CivilizationType", "text"),
      SQLColumn("UnitClassType", "text"),
      SQLColumn("UnitType", "text")),
    "Civilization_Start_Along_Ocean" -> SQLTable("Civilization_Start_Along_Ocean",
      SQLColumn("CivilizationType", "text"),
      SQLColumn("StartAlongOcean", "boolean")),
    "Civilization_Start_Along_River" -> SQLTable("Civilization_Start_Along_River",
      SQLColumn("CivilizationType", "text"),
      SQLColumn("StartAlongRiver", "boolean")),
    "Civilization_Start_Region_Priority" -> SQLTable("Civilization_Start_Region_Priority",
      SQLColumn("CivilizationType", "text"),
      SQLColumn("RegionType", "text")),
    "Civilization_Start_Region_Avoid" -> SQLTable("Civilization_Start_Region_Avoid",
      SQLColumn("CivilizationType", "text"),
      SQLColumn("RegionType", "text")),
    "Civilization_Start_Place_First_Along_Ocean" -> SQLTable("Civilization_Start_Place_First_Along_Ocean",
      SQLColumn("CivilizationType", "text"),
      SQLColumn("PlaceFirst", "boolean")),
    "MinorCivilizations" -> SQLTable("MinorCivilizations",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("ShortDescription", "text"),
      SQLColumn("Adjective", "text"),
      SQLColumn("ArtDefineTag", "text"),
      SQLColumn("DefaultPlayerColor", "text"),
      SQLColumn("ArtStyleType", "text"),
      SQLColumn("ArtStyleSuffix", "text"),
      SQLColumn("ArtStylePrefix", "text"),
      SQLColumn("MinorCivTrait", "text")),
    "MinorCivilization_Flavors" -> SQLTable("MinorCivilization_Flavors",
      SQLColumn("MinorCivType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "MinorCivilization_CityNames" -> SQLTable("MinorCivilization_CityNames",
      SQLColumn("MinorCivType", "text"),
      SQLColumn("CityName", "text")),
    "Regions" -> SQLTable("Regions",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text")),
    "Traits" -> SQLTable("Traits",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("ShortDescription", "text"),
      SQLColumn("LevelExperienceModifier", "integer"),
      SQLColumn("GreatPeopleRateModifier", "integer"),
      SQLColumn("GreatScientistRateModifier", "integer"),
      SQLColumn("GreatGeneralRateModifier", "integer"),
      SQLColumn("GreatGeneralExtraBonus", "integer"),
      SQLColumn("GreatPersonGiftInfluence", "integer"),
      SQLColumn("MaxGlobalBuildingProductionModifier", "integer"),
      SQLColumn("MaxTeamBuildingProductionModifier", "integer"),
      SQLColumn("MaxPlayerBuildingProductionModifier", "integer"),
      SQLColumn("CityUnhappinessModifier", "integer"),
      SQLColumn("PopulationUnhappinessModifier", "integer"),
      SQLColumn("CityStateBonusModifier", "integer"),
      SQLColumn("CityStateFriendshipModifier", "integer"),
      SQLColumn("CityStateCombatModifier", "integer"),
      SQLColumn("LandBarbarianConversionPercent", "integer"),
      SQLColumn("LandBarbarianConversionExtraUnits", "integer"),
      SQLColumn("SeaBarbarianConversionPercent", "integer"),
      SQLColumn("LandUnitMaintenanceModifier", "integer"),
      SQLColumn("NavalUnitMaintenanceModifier", "integer"),
      SQLColumn("CapitalBuildingModifier", "integer"),
      SQLColumn("PlotBuyCostModifier", "integer"),
      SQLColumn("PlotCultureCostModifier", "integer"),
      SQLColumn("CultureFromKills", "integer"),
      SQLColumn("FaithFromKills", "integer"),
      SQLColumn("CityCultureBonus", "integer"),
      SQLColumn("CapitalThemingBonusModifier", "integer"),
      SQLColumn("PolicyCostModifier", "integer"),
      SQLColumn("CityConnectionTradeRouteChange", "integer"),
      SQLColumn("WonderProductionModifier", "integer"),
      SQLColumn("PlunderModifier", "integer"),
      SQLColumn("ImprovementMaintenanceModifier", "integer"),
      SQLColumn("GoldenAgeDurationModifier", "integer"),
      SQLColumn("GoldenAgeMoveChange", "integer"),
      SQLColumn("GoldenAgeCombatModifier", "integer"),
      SQLColumn("GoldenAgeTourismModifier", "integer"),
      SQLColumn("GoldenAgeGreatArtistRateModifier", "integer"),
      SQLColumn("GoldenAgeGreatMusicianRateModifier", "integer"),
      SQLColumn("GoldenAgeGreatWriterRateModifier", "integer"),
      SQLColumn("ExtraEmbarkMoves", "integer"),
      SQLColumn("NaturalWonderFirstFinderGold", "integer"),
      SQLColumn("NaturalWonderSubsequentFinderGold", "integer"),
      SQLColumn("NaturalWonderYieldModifier", "integer"),
      SQLColumn("NaturalWonderHappinessModifier", "integer"),
      SQLColumn("NearbyImprovementCombatBonus", "integer"),
      SQLColumn("NearbyImprovementBonusRange", "integer"),
      SQLColumn("CultureBuildingYieldChange", "integer"),
      SQLColumn("CombatBonusVsHigherTech", "integer"),
      SQLColumn("CombatBonusVsLargerCiv", "integer"),
      SQLColumn("RazeSpeedModifier", "integer"),
      SQLColumn("DOFGreatPersonModifier", "integer"),
      SQLColumn("LuxuryHappinessRetention", "integer"),
      SQLColumn("ExtraSpies", "integer"),
      SQLColumn("UnresearchedTechBonusFromKills", "integer"),
      SQLColumn("ExtraFoundedCityTerritoryClaimRange", "integer"),
      SQLColumn("FreeSocialPoliciesPerEra", "integer"),
      SQLColumn("NumTradeRoutesModifier", "integer"),
      SQLColumn("TradeRouteResourceModifier", "integer"),
      SQLColumn("UniqueLuxuryCities", "integer"),
      SQLColumn("UniqueLuxuryQuantity", "integer"),
      SQLColumn("WorkerSpeedModifier", "integer"),
      SQLColumn("AfraidMinorPerTurnInfluence", "integer"),
      SQLColumn("LandTradeRouteRangeBonus", "integer"),
      SQLColumn("TradeReligionModifier", "integer"),
      SQLColumn("TradeBuildingModifier", "integer"),
      SQLColumn("FightWellDamaged", "boolean"),
      SQLColumn("MoveFriendlyWoodsAsRoad", "boolean"),
      SQLColumn("FasterAlongRiver", "boolean"),
      SQLColumn("FasterInHills", "boolean"),
      SQLColumn("EmbarkedAllWater", "boolean"),
      SQLColumn("EmbarkedToLandFlatCost", "boolean"),
      SQLColumn("NoHillsImprovementMaintenance", "boolean"),
      SQLColumn("TechBoostFromCapitalScienceBuildings", "boolean"),
      SQLColumn("StaysAliveZeroCities", "boolean"),
      SQLColumn("FaithFromUnimprovedForest", "boolean"),
      SQLColumn("BonusReligiousBelief", "boolean"),
      SQLColumn("AbleToAnnexCityStates", "boolean"),
      SQLColumn("CrossesMountainsAfterGreatGeneral", "boolean"),
      SQLColumn("MayaCalendarBonuses", "boolean"),
      SQLColumn("NoAnnexing", "boolean"),
      SQLColumn("TechFromCityConquer", "boolean"),
      SQLColumn("UniqueLuxuryRequiresNewArea", "boolean"),
      SQLColumn("RiverTradeRoad", "boolean"),
      SQLColumn("AngerFreeIntrusionOfCityStates", "boolean"),
      SQLColumn("FreeUnit", "text"),
      SQLColumn("FreeUnitPrereqTech", "text"),
      SQLColumn("CombatBonusImprovement", "text"),
      SQLColumn("FreeBuilding", "text"),
      SQLColumn("FreeBuildingOnConquest", "text"),
      SQLColumn("ObsoleteTech", "text"),
      SQLColumn("PrereqTech", "text")),
    "Trait_ExtraYieldThresholds" -> SQLTable("Trait_ExtraYieldThresholds",
      SQLColumn("TraitType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Trait_YieldChanges" -> SQLTable("Trait_YieldChanges",
      SQLColumn("TraitType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Trait_YieldChangesStrategicResources" -> SQLTable("Trait_YieldChangesStrategicResources",
      SQLColumn("TraitType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Trait_YieldChangesNaturalWonder" -> SQLTable("Trait_YieldChangesNaturalWonder",
      SQLColumn("TraitType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Trait_YieldChangesPerTradePartner" -> SQLTable("Trait_YieldChangesPerTradePartner",
      SQLColumn("TraitType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Trait_YieldChangesIncomingTradeRoute" -> SQLTable("Trait_YieldChangesIncomingTradeRoute",
      SQLColumn("TraitType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Trait_YieldModifiers" -> SQLTable("Trait_YieldModifiers",
      SQLColumn("TraitType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Trait_FreePromotions" -> SQLTable("Trait_FreePromotions",
      SQLColumn("TraitType", "text"),
      SQLColumn("PromotionType", "text")),
    "Trait_FreePromotionUnitCombats" -> SQLTable("Trait_FreePromotionUnitCombats",
      SQLColumn("TraitType", "text"),
      SQLColumn("UnitCombatType", "text"),
      SQLColumn("PromotionType", "text")),
    "Trait_MovesChangeUnitCombats" -> SQLTable("Trait_MovesChangeUnitCombats",
      SQLColumn("TraitType", "text"),
      SQLColumn("UnitCombatType", "text"),
      SQLColumn("MovesChange", "int")),
    "Trait_MaintenanceModifierUnitCombats" -> SQLTable("Trait_MaintenanceModifierUnitCombats",
      SQLColumn("TraitType", "text"),
      SQLColumn("UnitCombatType", "text"),
      SQLColumn("MaintenanceModifier", "int")),
    "Trait_Terrains" -> SQLTable("Trait_Terrains",
      SQLColumn("TraitType", "text"),
      SQLColumn("TerrainType", "text"),
      SQLColumn("StrategicResourceQuantityModifier", "integer")),
    "Trait_ResourceQuantityModifiers" -> SQLTable("Trait_ResourceQuantityModifiers",
      SQLColumn("TraitType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("ResourceQuantityModifier", "integer")),
    "Trait_FreeResourceFirstXCities" -> SQLTable("Trait_FreeResourceFirstXCities",
      SQLColumn("TraitType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("ResourceQuantity", "integer"),
      SQLColumn("NumCities", "integer")),
    "Trait_ImprovementYieldChanges" -> SQLTable("Trait_ImprovementYieldChanges",
      SQLColumn("TraitType", "text"),
      SQLColumn("ImprovementType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Trait_SpecialistYieldChanges" -> SQLTable("Trait_SpecialistYieldChanges",
      SQLColumn("TraitType", "text"),
      SQLColumn("SpecialistType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Trait_UnimprovedFeatureYieldChanges" -> SQLTable("Trait_UnimprovedFeatureYieldChanges",
      SQLColumn("TraitType", "text"),
      SQLColumn("FeatureType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Trait_NoTrain" -> SQLTable("Trait_NoTrain",
      SQLColumn("TraitType", "text"),
      SQLColumn("UnitClassType", "text")),
    "Diplomacy_Responses" -> SQLTable("Diplomacy_Responses",
      SQLColumn("LeaderType", "string"),
      SQLColumn("ResponseType", "string"),
      SQLColumn("Response", "string"),
      SQLColumn("Bias", "integer")),
    "ArtStyleTypes" -> SQLTable("ArtStyleTypes",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text")),
    "Climates" -> SQLTable("Climates",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("DesertPercentChange", "integer"),
      SQLColumn("JungleLatitude", "integer"),
      SQLColumn("HillRange", "integer"),
      SQLColumn("MountainPercent", "integer"),
      SQLColumn("SnowLatitudeChange", "float"),
      SQLColumn("TundraLatitudeChange", "float"),
      SQLColumn("GrassLatitudeChange", "float"),
      SQLColumn("DesertBottomLatitudeChange", "float"),
      SQLColumn("DesertTopLatitudeChange", "float"),
      SQLColumn("IceLatitude", "float"),
      SQLColumn("RandIceLatitude", "float")),
    "Cursors" -> SQLTable("Cursors",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("CursorPath", "text")),
    "EmphasizeInfos" -> SQLTable("EmphasizeInfos",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Strategy", "text"),
      SQLColumn("AvoidGrowth", "boolean"),
      SQLColumn("GreatPeople", "boolean")),
    "EmphasizeInfo_Yields" -> SQLTable("EmphasizeInfo_Yields",
      SQLColumn("EmphasizeType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Eras" -> SQLTable("Eras",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("ShortDescription", "text"),
      SQLColumn("Abbreviation", "text"),
      SQLColumn("ArtPrefix", "text"),
      SQLColumn("Strategy", "text"),
      SQLColumn("NoGoodies", "boolean"),
      SQLColumn("NoBarbUnits", "boolean"),
      SQLColumn("NoReligion", "boolean"),
      SQLColumn("FirstSoundtrackFirst", "boolean"),
      SQLColumn("ResearchAgreementCost", "integer"),
      SQLColumn("EmbarkedUnitDefense", "integer"),
      SQLColumn("StartingUnitMultiplier", "integer"),
      SQLColumn("StartingDefenseUnits", "integer"),
      SQLColumn("StartingWorkerUnits", "integer"),
      SQLColumn("StartingExploreUnits", "integer"),
      SQLColumn("StartingGold", "integer"),
      SQLColumn("StartingCulture", "integer"),
      SQLColumn("FreePopulation", "integer"),
      SQLColumn("LaterEraBuildingConstructMod", "integer"),
      SQLColumn("StartPercent", "integer"),
      SQLColumn("BuildingMaintenancePercent", "integer"),
      SQLColumn("GrowthPercent", "integer"),
      SQLColumn("TrainPercent", "integer"),
      SQLColumn("ConstructPercent", "integer"),
      SQLColumn("CreatePercent", "integer"),
      SQLColumn("ResearchPercent", "integer"),
      SQLColumn("BuildPercent", "integer"),
      SQLColumn("ImprovementPercent", "integer"),
      SQLColumn("GreatPeoplePercent", "integer"),
      SQLColumn("CulturePercent", "integer"),
      SQLColumn("TradeRouteFoodBonusTimes100", "integer"),
      SQLColumn("TradeRouteProductionBonusTimes100", "integer"),
      SQLColumn("EventChancePerTurn", "integer"),
      SQLColumn("SpiesGrantedForPlayer", "integer"),
      SQLColumn("SpiesGrantedForEveryone", "integer"),
      SQLColumn("FaithCostMultiplier", "integer"),
      SQLColumn("DiploEmphasisReligion", "integer"),
      SQLColumn("DiploEmphasisLatePolicies", "integer"),
      SQLColumn("LeaguePercent", "integer"),
      SQLColumn("SoundtrackSpace", "integer"),
      SQLColumn("CityBombardEffectTag", "text"),
      SQLColumn("AudioUnitVictoryScript", "text"),
      SQLColumn("AudioUnitDefeatScript", "text"),
      SQLColumn("CityArtType", "text")),
    "Era_Soundtracks" -> SQLTable("Era_Soundtracks",
      SQLColumn("EraType", "text"),
      SQLColumn("SoundTrack", "text")),
    "Era_CitySoundscapes" -> SQLTable("Era_CitySoundscapes",
      SQLColumn("EraType", "text"),
      SQLColumn("CitySizeType", "text"),
      SQLColumn("SoundscapeScript", "text")),
    "Era_NewEraVOs" -> SQLTable("Era_NewEraVOs",
      SQLColumn("EraType", "text"),
      SQLColumn("VOScript", "text")),
    "Flavors" -> SQLTable("Flavors",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text")),
    "GameOptions" -> SQLTable("GameOptions",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("Default", "boolean"),
      SQLColumn("Visible", "boolean"),
      SQLColumn("SupportsSinglePlayer", "boolean"),
      SQLColumn("SupportsMultiplayer", "boolean")),
    "GameSpeeds" -> SQLTable("GameSpeeds",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("DealDuration", "integer"),
      SQLColumn("GrowthPercent", "integer"),
      SQLColumn("TrainPercent", "integer"),
      SQLColumn("ConstructPercent", "integer"),
      SQLColumn("CreatePercent", "integer"),
      SQLColumn("ResearchPercent", "integer"),
      SQLColumn("GoldPercent", "integer"),
      SQLColumn("GoldGiftMod", "integer"),
      SQLColumn("BuildPercent", "integer"),
      SQLColumn("ImprovementPercent", "integer"),
      SQLColumn("GreatPeoplePercent", "integer"),
      SQLColumn("CulturePercent", "integer"),
      SQLColumn("FaithPercent", "integer"),
      SQLColumn("BarbPercent", "integer"),
      SQLColumn("FeatureProductionPercent", "integer"),
      SQLColumn("UnitDiscoverPercent", "integer"),
      SQLColumn("UnitHurryPercent", "integer"),
      SQLColumn("UnitTradePercent", "integer"),
      SQLColumn("GoldenAgePercent", "integer"),
      SQLColumn("HurryPercent", "integer"),
      SQLColumn("InflationPercent", "integer"),
      SQLColumn("InflationOffset", "integer"),
      SQLColumn("ReligiousPressureAdjacentCity", "integer"),
      SQLColumn("VictoryDelayPercent", "integer"),
      SQLColumn("MinorCivElectionFreqMod", "integer"),
      SQLColumn("OpinionDurationPercent", "integer"),
      SQLColumn("SpyRatePercent", "integer"),
      SQLColumn("PeaceDealDuration", "integer"),
      SQLColumn("RelationshipDuration", "integer"),
      SQLColumn("LeaguePercent", "integer"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text")),
    "GameSpeed_Turns" -> SQLTable("GameSpeed_Turns",
      SQLColumn("GameSpeedType", "text"),
      SQLColumn("MonthIncrement", "integer"),
      SQLColumn("TurnsPerIncrement", "integer")),
    "HandicapInfos" -> SQLTable("HandicapInfos",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("StartingLocPercent", "integer"),
      SQLColumn("AdvancedStartPointsMod", "integer"),
      SQLColumn("StartingPolicyPoints", "integer"),
      SQLColumn("HappinessDefault", "integer"),
      SQLColumn("ExtraHappinessPerLuxury", "integer"),
      SQLColumn("NumCitiesUnhappinessMod", "integer"),
      SQLColumn("PopulationUnhappinessMod", "integer"),
      SQLColumn("Gold", "integer"),
      SQLColumn("GoldFreeUnits", "integer"),
      SQLColumn("ProductionFreeUnits", "integer"),
      SQLColumn("ProductionFreeUnitsPerCity", "integer"),
      SQLColumn("ProductionFreeUnitsPopulationPercent", "integer"),
      SQLColumn("RouteCostPercent", "integer"),
      SQLColumn("UnitCostPercent", "integer"),
      SQLColumn("BuildingCostPercent", "integer"),
      SQLColumn("ResearchPercent", "integer"),
      SQLColumn("PolicyPercent", "integer"),
      SQLColumn("ImprovementCostPercent", "integer"),
      SQLColumn("CityProductionNumOptionsConsidered", "integer"),
      SQLColumn("TechNumOptionsConsidered", "integer"),
      SQLColumn("PolicyNumOptionsConsidered", "integer"),
      SQLColumn("InflationPercent", "integer"),
      SQLColumn("FreeCulturePerTurn", "integer"),
      SQLColumn("AttitudeChange", "integer"),
      SQLColumn("NoTechTradeModifier", "integer"),
      SQLColumn("TechTradeKnownModifier", "integer"),
      SQLColumn("BarbCampGold", "integer"),
      SQLColumn("BarbSpawnMod", "integer"),
      SQLColumn("BarbarianBonus", "integer"),
      SQLColumn("AIBarbarianBonus", "integer"),
      SQLColumn("EarliestBarbarianReleaseTurn", "integer"),
      SQLColumn("BarbarianLandTargetRange", "integer"),
      SQLColumn("BarbarianSeaTargetRange", "integer"),
      SQLColumn("StartingDefenseUnits", "integer"),
      SQLColumn("StartingWorkerUnits", "integer"),
      SQLColumn("StartingExploreUnits", "integer"),
      SQLColumn("AIStartingUnitMultiplier", "integer"),
      SQLColumn("AIStartingDefenseUnits", "integer"),
      SQLColumn("AIStartingWorkerUnits", "integer"),
      SQLColumn("AIStartingExploreUnits", "integer"),
      SQLColumn("AIDeclareWarProb", "integer"),
      SQLColumn("AIWorkRateModifier", "integer"),
      SQLColumn("AIUnhappinessPercent", "integer"),
      SQLColumn("AIGrowthPercent", "integer"),
      SQLColumn("AITrainPercent", "integer"),
      SQLColumn("AIWorldTrainPercent", "integer"),
      SQLColumn("AIConstructPercent", "integer"),
      SQLColumn("AIWorldConstructPercent", "integer"),
      SQLColumn("AICreatePercent", "integer"),
      SQLColumn("AIWorldCreatePercent", "integer"),
      SQLColumn("AIBuildingCostPercent", "integer"),
      SQLColumn("AIUnitCostPercent", "integer"),
      SQLColumn("AIUnitSupplyPercent", "integer"),
      SQLColumn("AIUnitUpgradePercent", "integer"),
      SQLColumn("AIInflationPercent", "integer"),
      SQLColumn("AIPerEraModifier", "integer"),
      SQLColumn("AIAdvancedStartPercent", "integer"),
      SQLColumn("AIFreeXP", "integer"),
      SQLColumn("AIFreeXPPercent", "integer"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text")),
    "HandicapInfo_Goodies" -> SQLTable("HandicapInfo_Goodies",
      SQLColumn("HandicapType", "text"),
      SQLColumn("GoodyType", "text")),
    "HandicapInfo_FreeTechs" -> SQLTable("HandicapInfo_FreeTechs",
      SQLColumn("HandicapType", "text"),
      SQLColumn("TechType", "text")),
    "HandicapInfo_AIFreeTechs" -> SQLTable("HandicapInfo_AIFreeTechs",
      SQLColumn("HandicapType", "text"),
      SQLColumn("TechType", "text")),
    "HurryInfos" -> SQLTable("HurryInfos",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("PolicyPrereq", "text"),
      SQLColumn("GoldPerProduction", "integer"),
      SQLColumn("ProductionPerPopulation", "integer"),
      SQLColumn("GoldPerBeaker", "integer"),
      SQLColumn("GoldPerCulture", "integer")),
    "IconFontTextures" -> SQLTable("IconFontTextures",
      SQLColumn("IconFontTexture", "text"),
      SQLColumn("IconFontTextureFile", "text")),
    "IconFontMapping" -> SQLTable("IconFontMapping",
      SQLColumn("IconName", "text"),
      SQLColumn("IconMapping", "integer"),
      SQLColumn("IconFontTexture", "text")),
    "IconTextureAtlases" -> SQLTable("IconTextureAtlases",
      SQLColumn("Atlas", "text"),
      SQLColumn("IconSize", "integer"),
      SQLColumn("Filename", "text"),
      SQLColumn("IconsPerRow", "text"),
      SQLColumn("IconsPerColumn", "text")),
    "MultiplayerOptions" -> SQLTable("MultiplayerOptions",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("Default", "boolean")),
    "PlayerOptions" -> SQLTable("PlayerOptions",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("Default", "boolean")),
    "Policies" -> SQLTable("Policies",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("Strategy", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("PolicyBranchType", "text"),
      SQLColumn("NumExtraBranches", "integer"),
      SQLColumn("CultureCost", "integer"),
      SQLColumn("GridX", "integer"),
      SQLColumn("GridY", "integer"),
      SQLColumn("Level", "integer"),
      SQLColumn("PolicyCostModifier", "integer"),
      SQLColumn("CulturePerCity", "integer"),
      SQLColumn("CulturePerWonder", "integer"),
      SQLColumn("CultureWonderMultiplier", "integer"),
      SQLColumn("CulturePerTechResearched", "integer"),
      SQLColumn("CultureImprovementChange", "integer"),
      SQLColumn("CultureFromKills", "integer"),
      SQLColumn("CultureFromBarbarianKills", "integer"),
      SQLColumn("GoldFromKills", "integer"),
      SQLColumn("EmbarkedExtraMoves", "integer"),
      SQLColumn("AttackBonusTurns", "integer"),
      SQLColumn("GoldenAgeTurns", "integer"),
      SQLColumn("GoldenAgeMeterMod", "integer"),
      SQLColumn("GoldenAgeDurationMod", "integer"),
      SQLColumn("NumFreeTechs", "integer"),
      SQLColumn("NumFreePolicies", "integer"),
      SQLColumn("NumFreeGreatPeople", "integer"),
      SQLColumn("MedianTechPercentChange", "integer"),
      SQLColumn("StrategicResourceMod", "integer"),
      SQLColumn("WonderProductionModifier", "integer"),
      SQLColumn("BuildingProductionModifier", "integer"),
      SQLColumn("GreatPeopleRateModifier", "integer"),
      SQLColumn("GreatGeneralRateModifier", "integer"),
      SQLColumn("GreatAdmiralRateModifier", "integer"),
      SQLColumn("GreatWriterRateModifier", "integer"),
      SQLColumn("GreatArtistRateModifier", "integer"),
      SQLColumn("GreatMusicianRateModifier", "integer"),
      SQLColumn("GreatMerchantRateModifier", "integer"),
      SQLColumn("GreatScientistRateModifier", "integer"),
      SQLColumn("DomesticGreatGeneralRateModifier", "integer"),
      SQLColumn("ExtraHappiness", "integer"),
      SQLColumn("ExtraHappinessPerCity", "integer"),
      SQLColumn("UnhappinessMod", "integer"),
      SQLColumn("CityCountUnhappinessMod", "integer"),
      SQLColumn("OccupiedPopulationUnhappinessMod", "integer"),
      SQLColumn("CapitalUnhappinessMod", "integer"),
      SQLColumn("FreeExperience", "integer"),
      SQLColumn("WorkerSpeedModifier", "integer"),
      SQLColumn("AllFeatureProduction", "integer"),
      SQLColumn("ImprovementCostModifier", "integer"),
      SQLColumn("ImprovementUpgradeRateModifier", "integer"),
      SQLColumn("SpecialistProductionModifier", "integer"),
      SQLColumn("SpecialistUpgradeModifier", "integer"),
      SQLColumn("MilitaryProductionModifier", "integer"),
      SQLColumn("BaseFreeUnits", "integer"),
      SQLColumn("BaseFreeMilitaryUnits", "integer"),
      SQLColumn("FreeUnitsPopulationPercent", "integer"),
      SQLColumn("FreeMilitaryUnitsPopulationPercent", "integer"),
      SQLColumn("HappinessPerGarrisonedUnit", "integer"),
      SQLColumn("CulturePerGarrisonedUnit", "integer"),
      SQLColumn("HappinessPerTradeRoute", "integer"),
      SQLColumn("HappinessPerXPopulation", "integer"),
      SQLColumn("ExtraHappinessPerLuxury", "integer"),
      SQLColumn("UnhappinessFromUnitsMod", "integer"),
      SQLColumn("NumExtraBuilders", "integer"),
      SQLColumn("PlotGoldCostMod", "integer"),
      SQLColumn("PlotCultureCostModifier", "integer"),
      SQLColumn("PlotCultureExponentModifier", "integer"),
      SQLColumn("NumCitiesPolicyCostDiscount", "integer"),
      SQLColumn("GarrisonedCityRangeStrikeModifier", "integer"),
      SQLColumn("UnitPurchaseCostModifier", "integer"),
      SQLColumn("BuildingPurchaseCostModifier", "integer"),
      SQLColumn("CityConnectionTradeRouteGoldModifier", "integer"),
      SQLColumn("TradeMissionGoldModifier", "integer"),
      SQLColumn("FaithCostModifier", "integer"),
      SQLColumn("CulturalPlunderMultiplier", "integer"),
      SQLColumn("StealTechSlowerModifier", "integer"),
      SQLColumn("StealTechFasterModifier", "integer"),
      SQLColumn("CatchSpiesModifier", "integer"),
      SQLColumn("GoldPerUnit", "integer"),
      SQLColumn("GoldPerMilitaryUnit", "integer"),
      SQLColumn("RouteGoldMaintenanceMod", "integer"),
      SQLColumn("BuildingGoldMaintenanceMod", "integer"),
      SQLColumn("UnitGoldMaintenanceMod", "integer"),
      SQLColumn("UnitSupplyMod", "integer"),
      SQLColumn("UnitUpgradeCostMod", "integer"),
      SQLColumn("CityStrengthMod", "integer"),
      SQLColumn("CityGrowthMod", "integer"),
      SQLColumn("CapitalGrowthMod", "integer"),
      SQLColumn("SettlerProductionModifier", "integer"),
      SQLColumn("CapitalSettlerProductionModifier", "integer"),
      SQLColumn("NewCityExtraPopulation", "integer"),
      SQLColumn("FreeFoodBox", "integer"),
      SQLColumn("HappyPerMilitaryUnit", "integer"),
      SQLColumn("MilitaryFoodProduction", "boolean"),
      SQLColumn("HappinessToCulture", "integer"),
      SQLColumn("HappinessToScience", "integer"),
      SQLColumn("NumCitiesFreeCultureBuilding", "integer"),
      SQLColumn("NumCitiesFreeFoodBuilding", "integer"),
      SQLColumn("HalfSpecialistUnhappiness", "boolean"),
      SQLColumn("HalfSpecialistFood", "boolean"),
      SQLColumn("MaxConscript", "integer"),
      SQLColumn("UnitSightRangeChange", "integer"),
      SQLColumn("WoundedUnitDamageMod", "integer"),
      SQLColumn("BarbarianCombatBonus", "integer"),
      SQLColumn("AlwaysSeeBarbCamps", "boolean"),
      SQLColumn("RevealAllCapitals", "boolean"),
      SQLColumn("FreeSpecialist", "integer"),
      SQLColumn("ExpModifier", "integer"),
      SQLColumn("ExpInBorderModifier", "integer"),
      SQLColumn("MinorQuestFriendshipMod", "integer"),
      SQLColumn("MinorGoldFriendshipMod", "integer"),
      SQLColumn("MinorFriendshipMinimum", "integer"),
      SQLColumn("MinorFriendshipDecayMod", "integer"),
      SQLColumn("OtherPlayersMinorFriendshipDecayMod", "integer"),
      SQLColumn("CityStateUnitFrequencyModifier", "integer"),
      SQLColumn("CommonFoeTourismModifier", "integer"),
      SQLColumn("LessHappyTourismModifier", "integer"),
      SQLColumn("SharedIdeologyTourismModifier", "integer"),
      SQLColumn("LandTradeRouteGoldChange", "integer"),
      SQLColumn("SeaTradeRouteGoldChange", "integer"),
      SQLColumn("SharedIdeologyTradeGoldChange", "integer"),
      SQLColumn("RiggingElectionModifier", "integer"),
      SQLColumn("MilitaryUnitGiftExtraInfluence", "integer"),
      SQLColumn("ProtectedMinorPerTurnInfluence", "integer"),
      SQLColumn("AfraidMinorPerTurnInfluence", "integer"),
      SQLColumn("MinorBullyScoreModifier", "integer"),
      SQLColumn("CityStateTradeChange", "integer"),
      SQLColumn("ThemingBonusMultiplier", "integer"),
      SQLColumn("InternalTradeRouteYieldModifier", "integer"),
      SQLColumn("SharedReligionTourismModifier", "integer"),
      SQLColumn("TradeRouteTourismModifier", "integer"),
      SQLColumn("OpenBordersTourismModifier", "integer"),
      SQLColumn("MinorGreatPeopleAllies", "boolean"),
      SQLColumn("MinorScienceAllies", "boolean"),
      SQLColumn("MinorResourceBonus", "boolean"),
      SQLColumn("GarrisonFreeMaintenance", "boolean"),
      SQLColumn("GoldenAgeCultureBonusDisabled", "boolean"),
      SQLColumn("SecondReligionPantheon", "boolean"),
      SQLColumn("AddReformationBelief", "boolean"),
      SQLColumn("EnablesSSPartHurry", "boolean"),
      SQLColumn("EnablesSSPartPurchase", "boolean"),
      SQLColumn("AbleToAnnexCityStates", "boolean"),
      SQLColumn("OneShot", "boolean"),
      SQLColumn("IncludesOneShotFreeUnits", "boolean"),
      SQLColumn("WeLoveTheKing", "text"),
      SQLColumn("FreeBuildingOnConquest", "text"),
      SQLColumn("TechPrereq", "text"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text"),
      SQLColumn("IconAtlasAchieved", "text")),
    "Policy_CityYieldChanges" -> SQLTable("Policy_CityYieldChanges",
      SQLColumn("PolicyType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Policy_CoastalCityYieldChanges" -> SQLTable("Policy_CoastalCityYieldChanges",
      SQLColumn("PolicyType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Policy_CapitalYieldChanges" -> SQLTable("Policy_CapitalYieldChanges",
      SQLColumn("PolicyType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Policy_CapitalYieldPerPopChanges" -> SQLTable("Policy_CapitalYieldPerPopChanges",
      SQLColumn("PolicyType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Policy_CapitalYieldModifiers" -> SQLTable("Policy_CapitalYieldModifiers",
      SQLColumn("PolicyType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Policy_Disables" -> SQLTable("Policy_Disables",
      SQLColumn("PolicyType", "text"),
      SQLColumn("PolicyDisable", "text")),
    "Policy_Flavors" -> SQLTable("Policy_Flavors",
      SQLColumn("PolicyType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "Policy_GreatWorkYieldChanges" -> SQLTable("Policy_GreatWorkYieldChanges",
      SQLColumn("PolicyType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Policy_HurryModifiers" -> SQLTable("Policy_HurryModifiers",
      SQLColumn("PolicyType", "text"),
      SQLColumn("HurryType", "text"),
      SQLColumn("HurryCostModifier", "integer")),
    "Policy_PrereqPolicies" -> SQLTable("Policy_PrereqPolicies",
      SQLColumn("PolicyType", "text"),
      SQLColumn("PrereqPolicy", "text")),
    "Policy_PrereqORPolicies" -> SQLTable("Policy_PrereqORPolicies",
      SQLColumn("PolicyType", "text"),
      SQLColumn("PrereqPolicy", "text")),
    "Policy_SpecialistExtraYields" -> SQLTable("Policy_SpecialistExtraYields",
      SQLColumn("PolicyType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Policy_BuildingClassYieldModifiers" -> SQLTable("Policy_BuildingClassYieldModifiers",
      SQLColumn("PolicyType", "text"),
      SQLColumn("BuildingClassType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("YieldMod", "integer")),
    "Policy_BuildingClassYieldChanges" -> SQLTable("Policy_BuildingClassYieldChanges",
      SQLColumn("PolicyType", "text"),
      SQLColumn("BuildingClassType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("YieldChange", "integer")),
    "Policy_BuildingClassCultureChanges" -> SQLTable("Policy_BuildingClassCultureChanges",
      SQLColumn("PolicyType", "text"),
      SQLColumn("BuildingClassType", "text"),
      SQLColumn("CultureChange", "integer")),
    "Policy_BuildingClassProductionModifiers" -> SQLTable("Policy_BuildingClassProductionModifiers",
      SQLColumn("PolicyType", "text"),
      SQLColumn("BuildingClassType", "text"),
      SQLColumn("ProductionModifier", "integer")),
    "Policy_BuildingClassTourismModifiers" -> SQLTable("Policy_BuildingClassTourismModifiers",
      SQLColumn("PolicyType", "text"),
      SQLColumn("BuildingClassType", "text"),
      SQLColumn("TourismModifier", "integer")),
    "Policy_BuildingClassHappiness" -> SQLTable("Policy_BuildingClassHappiness",
      SQLColumn("PolicyType", "text"),
      SQLColumn("BuildingClassType", "text"),
      SQLColumn("Happiness", "integer")),
    "Policy_ImprovementYieldChanges" -> SQLTable("Policy_ImprovementYieldChanges",
      SQLColumn("PolicyType", "text"),
      SQLColumn("ImprovementType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Policy_ImprovementCultureChanges" -> SQLTable("Policy_ImprovementCultureChanges",
      SQLColumn("PolicyType", "text"),
      SQLColumn("ImprovementType", "text"),
      SQLColumn("CultureChange", "integer")),
    "Policy_ValidSpecialists" -> SQLTable("Policy_ValidSpecialists",
      SQLColumn("PolicyType", "text"),
      SQLColumn("SpecialistType", "text")),
    "Policy_YieldModifiers" -> SQLTable("Policy_YieldModifiers",
      SQLColumn("PolicyType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Policy_FreePromotions" -> SQLTable("Policy_FreePromotions",
      SQLColumn("PolicyType", "text"),
      SQLColumn("PromotionType", "text")),
    "Policy_UnitCombatFreeExperiences" -> SQLTable("Policy_UnitCombatFreeExperiences",
      SQLColumn("PolicyType", "text"),
      SQLColumn("UnitCombatType", "text"),
      SQLColumn("FreeExperience", "integer")),
    "Policy_FreePromotionUnitCombats" -> SQLTable("Policy_FreePromotionUnitCombats",
      SQLColumn("PolicyType", "text"),
      SQLColumn("UnitCombatType", "text"),
      SQLColumn("PromotionType", "text")),
    "Policy_UnitCombatProductionModifiers" -> SQLTable("Policy_UnitCombatProductionModifiers",
      SQLColumn("PolicyType", "text"),
      SQLColumn("UnitCombatType", "text"),
      SQLColumn("ProductionModifier", "integer")),
    "Policy_FreeUnitClasses" -> SQLTable("Policy_FreeUnitClasses",
      SQLColumn("PolicyType", "text"),
      SQLColumn("UnitClassType", "text"),
      SQLColumn("Count", "integer")),
    "Policy_TourismOnUnitCreation" -> SQLTable("Policy_TourismOnUnitCreation",
      SQLColumn("PolicyType", "text"),
      SQLColumn("UnitClassType", "text"),
      SQLColumn("Tourism", "integer")),
    "Policy_FreeItems" -> SQLTable("Policy_FreeItems",
      SQLColumn("PolicyType", "text"),
      SQLColumn("SetType", "text"),
      SQLColumn("MinItems", "integer"),
      SQLColumn("MaxItems", "integer")),
    "PolicyBranchTypes" -> SQLTable("PolicyBranchTypes",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("Strategy", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("Title", "text"),
      SQLColumn("EraPrereq", "text"),
      SQLColumn("FreePolicy", "text"),
      SQLColumn("FreeFinishingPolicy", "text"),
      SQLColumn("FirstAdopterFreePolicies", "int"),
      SQLColumn("SecondAdopterFreePolicies", "int"),
      SQLColumn("PurchaseByLevel", "boolean"),
      SQLColumn("LockedWithoutReligion", "boolean"),
      SQLColumn("AIMutuallyExclusive", "boolean"),
      SQLColumn("AIDelayNoReligion", "boolean"),
      SQLColumn("AIDelayNoCulture", "boolean"),
      SQLColumn("AIDelayNoCityStates", "boolean"),
      SQLColumn("AIDelayNoScience", "boolean")),
    "PolicyBranch_Disables" -> SQLTable("PolicyBranch_Disables",
      SQLColumn("PolicyBranchType", "text"),
      SQLColumn("PolicyBranchDisable", "text")),
    "Processes" -> SQLTable("Processes",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("Strategy", "text"),
      SQLColumn("TechPrereq", "text"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text")),
    "Process_Flavors" -> SQLTable("Process_Flavors",
      SQLColumn("ProcessType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "Process_ProductionYields" -> SQLTable("Process_ProductionYields",
      SQLColumn("ProcessType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Projects" -> SQLTable("Projects",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("Strategy", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("Requirements", "text"),
      SQLColumn("MaxGlobalInstances", "integer"),
      SQLColumn("MaxTeamInstances", "integer"),
      SQLColumn("Cost", "integer"),
      SQLColumn("NukeInterception", "integer"),
      SQLColumn("CultureBranchesRequired", "integer"),
      SQLColumn("TechShare", "integer"),
      SQLColumn("VictoryDelayPercent", "integer"),
      SQLColumn("Spaceship", "boolean"),
      SQLColumn("Religious", "boolean"),
      SQLColumn("AllowsNukes", "boolean"),
      SQLColumn("MovieDefineTag", "text"),
      SQLColumn("VictoryPrereq", "text"),
      SQLColumn("TechPrereq", "text"),
      SQLColumn("EveryoneSpecialUnit", "text"),
      SQLColumn("CreateSound", "text"),
      SQLColumn("AnyonePrereqProject", "text"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text")),
    "Project_Flavors" -> SQLTable("Project_Flavors",
      SQLColumn("ProjectType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "Project_Prereqs" -> SQLTable("Project_Prereqs",
      SQLColumn("ProjectType", "text"),
      SQLColumn("PrereqProjectType", "text"),
      SQLColumn("AmountNeeded", "integer")),
    "Project_VictoryThresholds" -> SQLTable("Project_VictoryThresholds",
      SQLColumn("ProjectType", "text"),
      SQLColumn("VictoryType", "text"),
      SQLColumn("Threshold", "integer"),
      SQLColumn("MinThreshold", "integer")),
    "Project_ResourceQuantityRequirements" -> SQLTable("Project_ResourceQuantityRequirements",
      SQLColumn("ProjectType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("Quantity", "integer")),
    "ReplayDataSets" -> SQLTable("ReplayDataSets",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Name", "text"),
      SQLColumn("Description", "text")),
    "SeaLevels" -> SQLTable("SeaLevels",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("SeaLevelChange", "integer")),
    "SmallAwards" -> SQLTable("SmallAwards",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("Notification", "text"),
      SQLColumn("TeamNotification", "text"),
      SQLColumn("NumVictoryPoints", "integer"),
      SQLColumn("NumCities", "integer"),
      SQLColumn("CityPopulation", "integer")),
    "Specialists" -> SQLTable("Specialists",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("Strategy", "text"),
      SQLColumn("GreatPeopleTitle", "text"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text"),
      SQLColumn("Visible", "boolean"),
      SQLColumn("Cost", "integer"),
      SQLColumn("Experience", "integer"),
      SQLColumn("GreatPeopleRateChange", "integer"),
      SQLColumn("CulturePerTurn", "integer"),
      SQLColumn("GreatPeopleUnitClass", "text")),
    "SpecialistFlavors" -> SQLTable("SpecialistFlavors",
      SQLColumn("SpecialistType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "SpecialistYields" -> SQLTable("SpecialistYields",
      SQLColumn("SpecialistType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Trades" -> SQLTable("Trades",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("InitialPercent", "integer"),
      SQLColumn("AIWeightPercent", "integer")),
    "TurnTimers" -> SQLTable("TurnTimers",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("BaseTime", "integer"),
      SQLColumn("CityResource", "integer"),
      SQLColumn("UnitResource", "integer"),
      SQLColumn("FirstTurnMultiplier", "integer")),
    "GoodyHuts" -> SQLTable("GoodyHuts",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("ChooseDescription", "text"),
      SQLColumn("Sound", "text"),
      SQLColumn("Gold", "integer"),
      SQLColumn("NumGoldRandRolls", "integer"),
      SQLColumn("GoldRandAmount", "integer"),
      SQLColumn("MapOffset", "integer"),
      SQLColumn("MapRange", "integer"),
      SQLColumn("MapProb", "integer"),
      SQLColumn("Experience", "integer"),
      SQLColumn("Healing", "integer"),
      SQLColumn("DamagePrereq", "integer"),
      SQLColumn("Population", "integer"),
      SQLColumn("Culture", "integer"),
      SQLColumn("Faith", "integer"),
      SQLColumn("ProphetPercent", "integer"),
      SQLColumn("RevealNearbyBarbariansRange", "integer"),
      SQLColumn("Tech", "boolean"),
      SQLColumn("RevealUnknownResource", "boolean"),
      SQLColumn("UpgradeUnit", "boolean"),
      SQLColumn("PantheonFaith", "boolean"),
      SQLColumn("Bad", "boolean"),
      SQLColumn("UnitClass", "text"),
      SQLColumn("BarbarianUnitClass", "text"),
      SQLColumn("BarbarianUnitProb", "integer"),
      SQLColumn("MinBarbarians", "integer")),
    "Victories" -> SQLTable("Victories",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("VictoryStatement", "text"),
      SQLColumn("VictoryBackground", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("WinsGame", "boolean"),
      SQLColumn("TargetScore", "boolean"),
      SQLColumn("EndScore", "boolean"),
      SQLColumn("Conquest", "boolean"),
      SQLColumn("Influential", "boolean"),
      SQLColumn("DiploVote", "boolean"),
      SQLColumn("Permanent", "boolean"),
      SQLColumn("ReligionInAllCities", "boolean"),
      SQLColumn("FindAllNaturalWonders", "boolean"),
      SQLColumn("PopulationPercentLead", "integer"),
      SQLColumn("LandPercent", "integer"),
      SQLColumn("MinLandPercent", "integer"),
      SQLColumn("NumCultureCities", "integer"),
      SQLColumn("TotalCultureRatio", "integer"),
      SQLColumn("VictoryDelayTurns", "integer"),
      SQLColumn("VictoryMovie", "text"),
      SQLColumn("CityCulture", "text"),
      SQLColumn("Audio", "text")),
    "VictoryPointAwards" -> SQLTable("VictoryPointAwards",
      SQLColumn("VictoryType", "text"),
      SQLColumn("VictoryPoints", "integer")),
    "HistoricRankings" -> SQLTable("HistoricRankings",
      SQLColumn("ID", "integer"),
      SQLColumn("HistoricLeader", "text"),
      SQLColumn("LeaderQuote", "text"),
      SQLColumn("LeaderScore", "integer")),
    "Votes" -> SQLTable("Votes",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("PopulationThreshold", "integer"),
      SQLColumn("MinVoters", "integer"),
      SQLColumn("CityVoting", "boolean"),
      SQLColumn("CivVoting", "boolean"),
      SQLColumn("SecretaryGeneral", "boolean"),
      SQLColumn("Victory", "boolean"),
      SQLColumn("FreeTrade", "boolean"),
      SQLColumn("NoNukes", "boolean"),
      SQLColumn("DefensivePact", "boolean"),
      SQLColumn("OpenBorders", "boolean"),
      SQLColumn("ForcePeace", "boolean"),
      SQLColumn("ForceNoTrade", "boolean"),
      SQLColumn("ForceWar", "boolean"),
      SQLColumn("AssignCity", "boolean")),
    "Vote_DiploVotes" -> SQLTable("Vote_DiploVotes",
      SQLColumn("VoteType", "text"),
      SQLColumn("DiploVoteType", "text")),
    "VoteSources" -> SQLTable("VoteSources",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("PopupText", "text"),
      SQLColumn("SecretaryGeneralText", "text"),
      SQLColumn("VoteInterval", "integer"),
      SQLColumn("FreeSpecialist", "text"),
      SQLColumn("Policy", "text")),
    "Worlds" -> SQLTable("Worlds",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("DefaultPlayers", "integer"),
      SQLColumn("DefaultMinorCivs", "integer"),
      SQLColumn("FogTilesPerBarbarianCamp", "integer"),
      SQLColumn("NumNaturalWonders", "integer"),
      SQLColumn("UnitNameModifier", "integer"),
      SQLColumn("TargetNumCities", "integer"),
      SQLColumn("NumFreeBuildingResources", "integer"),
      SQLColumn("BuildingClassPrereqModifier", "integer"),
      SQLColumn("MaxConscriptModifier", "integer"),
      SQLColumn("GridWidth", "integer"),
      SQLColumn("GridHeight", "integer"),
      SQLColumn("MaxActiveReligions", "integer"),
      SQLColumn("TerrainGrainChange", "integer"),
      SQLColumn("FeatureGrainChange", "integer"),
      SQLColumn("ResearchPercent", "integer"),
      SQLColumn("NumCitiesUnhappinessPercent", "integer"),
      SQLColumn("NumCitiesPolicyCostMod", "integer"),
      SQLColumn("NumCitiesTechCostMod", "integer"),
      SQLColumn("AdvancedStartPointsMod", "integer"),
      SQLColumn("EstimatedNumCities", "integer"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text")),
    "Colors" -> SQLTable("Colors",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Red", "float"),
      SQLColumn("Green", "float"),
      SQLColumn("Blue", "float"),
      SQLColumn("Alpha", "float")),
    "InterfaceModes" -> SQLTable("InterfaceModes",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("DisabledHelp", "text"),
      SQLColumn("CursorType", "text"),
      SQLColumn("Mission", "text"),
      SQLColumn("HotKey", "text"),
      SQLColumn("HotKeyAlt", "text"),
      SQLColumn("HotKeyPriority", "integer"),
      SQLColumn("HotKeyPriorityAlt", "integer"),
      SQLColumn("OrderPriority", "integer"),
      SQLColumn("AltDown", "boolean"),
      SQLColumn("AltDownAlt", "boolean"),
      SQLColumn("ShiftDown", "boolean"),
      SQLColumn("ShiftDownAlt", "boolean"),
      SQLColumn("CtrlDown", "boolean"),
      SQLColumn("CtrlDownAlt", "boolean"),
      SQLColumn("Visible", "boolean"),
      SQLColumn("GotoPlot", "boolean"),
      SQLColumn("HighlightPlot", "boolean"),
      SQLColumn("SelectType", "boolean"),
      SQLColumn("SelectAll", "boolean"),
      SQLColumn("IconIndex", "integer"),
      SQLColumn("IconAtlas", "text")),
    "PlayerColors" -> SQLTable("PlayerColors",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("PrimaryColor", "text"),
      SQLColumn("SecondaryColor", "text"),
      SQLColumn("TextColor", "text")),
    "Leaders" -> SQLTable("Leaders",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("CivilopediaTag", "text"),
      SQLColumn("ArtDefineTag", "text"),
      SQLColumn("VictoryCompetitiveness", "integer"),
      SQLColumn("WonderCompetitiveness", "integer"),
      SQLColumn("MinorCivCompetitiveness", "integer"),
      SQLColumn("Boldness", "integer"),
      SQLColumn("DiploBalance", "integer"),
      SQLColumn("WarmongerHate", "integer"),
      SQLColumn("WorkAgainstWillingness", "integer"),
      SQLColumn("WorkWithWillingness", "integer"),
      SQLColumn("DenounceWillingness", "integer"),
      SQLColumn("DoFWillingness", "integer"),
      SQLColumn("Loyalty", "integer"),
      SQLColumn("Neediness", "integer"),
      SQLColumn("Forgiveness", "integer"),
      SQLColumn("Chattiness", "integer"),
      SQLColumn("Meanness", "integer"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text"),
      SQLColumn("PackageID", "text")),
    "Leader_MajorCivApproachBiases" -> SQLTable("Leader_MajorCivApproachBiases",
      SQLColumn("LeaderType", "text"),
      SQLColumn("MajorCivApproachType", "text"),
      SQLColumn("Bias", "integer")),
    "Leader_MinorCivApproachBiases" -> SQLTable("Leader_MinorCivApproachBiases",
      SQLColumn("LeaderType", "text"),
      SQLColumn("MinorCivApproachType", "text"),
      SQLColumn("Bias", "integer")),
    "Leader_Flavors" -> SQLTable("Leader_Flavors",
      SQLColumn("LeaderType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "Leader_Traits" -> SQLTable("Leader_Traits",
      SQLColumn("LeaderType", "text"),
      SQLColumn("TraitType", "text")),
    "Routes" -> SQLTable("Routes",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("AdvancedStartCost", "integer"),
      SQLColumn("Value", "integer"),
      SQLColumn("Movement", "integer"),
      SQLColumn("FlatMovement", "integer"),
      SQLColumn("GoldMaintenance", "integer"),
      SQLColumn("Industrial", "boolean"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text"),
      SQLColumn("Civilopedia", "text")),
    "Route_Yields" -> SQLTable("Route_Yields",
      SQLColumn("RouteType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Route_TechMovementChanges" -> SQLTable("Route_TechMovementChanges",
      SQLColumn("RouteType", "text"),
      SQLColumn("TechType", "text"),
      SQLColumn("MovementChange", "integer")),
    "Route_ResourceQuantityRequirements" -> SQLTable("Route_ResourceQuantityRequirements",
      SQLColumn("RouteType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("Cost", "integer")),
    "Notifications" -> SQLTable("Notifications",
      SQLColumn("ID", "integer"),
      SQLColumn("NotificationType", "text"),
      SQLColumn("Welcomeness", "integer"),
      SQLColumn("Urgent", "bool")),
    "Religions" -> SQLTable("Religions",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("EarliestFoundDate", "integer"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text"),
      SQLColumn("IconString", "text")),
    "Beliefs" -> SQLTable("Beliefs",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("ShortDescription", "text"),
      SQLColumn("Pantheon", "boolean"),
      SQLColumn("Founder", "boolean"),
      SQLColumn("Follower", "boolean"),
      SQLColumn("Enhancer", "boolean"),
      SQLColumn("Reformation", "boolean"),
      SQLColumn("RequiresPeace", "boolean"),
      SQLColumn("ConvertsBarbarians", "boolean"),
      SQLColumn("FaithPurchaseAllGreatPeople", "boolean"),
      SQLColumn("MinPopulation", "integer"),
      SQLColumn("MinFollowers", "integer"),
      SQLColumn("MaxDistance", "integer"),
      SQLColumn("CityGrowthModifier", "integer"),
      SQLColumn("FaithFromKills", "integer"),
      SQLColumn("FaithFromDyingUnits", "integer"),
      SQLColumn("RiverHappiness", "integer"),
      SQLColumn("HappinessPerCity", "integer"),
      SQLColumn("HappinessPerFollowingCity", "float"),
      SQLColumn("HappinessPerXPeacefulForeignFollowers", "integer"),
      SQLColumn("PlotCultureCostModifier", "integer"),
      SQLColumn("CityRangeStrikeModifier", "integer"),
      SQLColumn("CombatModifierEnemyCities", "integer"),
      SQLColumn("CombatModifierFriendlyCities", "integer"),
      SQLColumn("FriendlyHealChange", "integer"),
      SQLColumn("CityStateFriendshipModifier", "integer"),
      SQLColumn("LandBarbarianConversionPercent", "integer"),
      SQLColumn("WonderProductionModifier", "integer"),
      SQLColumn("PlayerHappiness", "integer"),
      SQLColumn("PlayerCultureModifier", "integer"),
      SQLColumn("GoldPerFollowingCity", "integer"),
      SQLColumn("GoldPerXFollowers", "integer"),
      SQLColumn("GoldPerFirstCityConversion", "integer"),
      SQLColumn("SciencePerOtherReligionFollower", "integer"),
      SQLColumn("SpreadDistanceModifier", "integer"),
      SQLColumn("SpreadStrengthModifier", "integer"),
      SQLColumn("ProphetStrengthModifier", "integer"),
      SQLColumn("ProphetCostModifier", "integer"),
      SQLColumn("MissionaryStrengthModifier", "integer"),
      SQLColumn("MissionaryCostModifier", "integer"),
      SQLColumn("FriendlyCityStateSpreadModifier", "integer"),
      SQLColumn("GreatPersonExpendedFaith", "integer"),
      SQLColumn("CityStateMinimumInfluence", "integer"),
      SQLColumn("CityStateInfluenceModifier", "integer"),
      SQLColumn("OtherReligionPressureErosion", "integer"),
      SQLColumn("SpyPressure", "integer"),
      SQLColumn("InquisitorPressureRetention", "integer"),
      SQLColumn("FaithBuildingTourism", "integer"),
      SQLColumn("ObsoleteEra", "text"),
      SQLColumn("ResourceRevealed", "text"),
      SQLColumn("SpreadModifierDoublingTech", "text")),
    "Belief_BuildingClassYieldChanges" -> SQLTable("Belief_BuildingClassYieldChanges",
      SQLColumn("BeliefType", "text"),
      SQLColumn("BuildingClassType", "text"),
      SQLColumn("YieldType", "integer"),
      SQLColumn("YieldChange", "integer")),
    "Belief_BuildingClassHappiness" -> SQLTable("Belief_BuildingClassHappiness",
      SQLColumn("BeliefType", "text"),
      SQLColumn("BuildingClassType", "text"),
      SQLColumn("Happiness", "integer")),
    "Belief_BuildingClassTourism" -> SQLTable("Belief_BuildingClassTourism",
      SQLColumn("BeliefType", "text"),
      SQLColumn("BuildingClassType", "text"),
      SQLColumn("Tourism", "integer")),
    "Belief_BuildingClassFaithPurchase" -> SQLTable("Belief_BuildingClassFaithPurchase",
      SQLColumn("BeliefType", "text"),
      SQLColumn("BuildingClassType", "text")),
    "Belief_CityYieldChanges" -> SQLTable("Belief_CityYieldChanges",
      SQLColumn("BeliefType", "text"),
      SQLColumn("YieldType", "integer"),
      SQLColumn("Yield", "integer")),
    "Belief_HolyCityYieldChanges" -> SQLTable("Belief_HolyCityYieldChanges",
      SQLColumn("BeliefType", "text"),
      SQLColumn("YieldType", "integer"),
      SQLColumn("Yield", "integer")),
    "Belief_EraFaithUnitPurchase" -> SQLTable("Belief_EraFaithUnitPurchase",
      SQLColumn("BeliefType", "text"),
      SQLColumn("EraType", "text")),
    "Belief_FeatureYieldChanges" -> SQLTable("Belief_FeatureYieldChanges",
      SQLColumn("BeliefType", "text"),
      SQLColumn("FeatureType", "text"),
      SQLColumn("YieldType", "integer"),
      SQLColumn("Yield", "integer")),
    "Belief_ImprovementYieldChanges" -> SQLTable("Belief_ImprovementYieldChanges",
      SQLColumn("BeliefType", "text"),
      SQLColumn("ImprovementType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Belief_MaxYieldModifierPerFollower" -> SQLTable("Belief_MaxYieldModifierPerFollower",
      SQLColumn("BeliefType", "text"),
      SQLColumn("YieldType", "integer"),
      SQLColumn("Max", "integer")),
    "Belief_ResourceQuantityModifiers" -> SQLTable("Belief_ResourceQuantityModifiers",
      SQLColumn("BeliefType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("ResourceQuantityModifier", "integer")),
    "Belief_ResourceHappiness" -> SQLTable("Belief_ResourceHappiness",
      SQLColumn("BeliefType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("HappinessChange", "integer")),
    "Belief_ResourceYieldChanges" -> SQLTable("Belief_ResourceYieldChanges",
      SQLColumn("BeliefType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("YieldType", "integer"),
      SQLColumn("Yield", "integer")),
    "Belief_TerrainYieldChanges" -> SQLTable("Belief_TerrainYieldChanges",
      SQLColumn("BeliefType", "text"),
      SQLColumn("TerrainType", "text"),
      SQLColumn("YieldType", "integer"),
      SQLColumn("Yield", "integer")),
    "Belief_YieldChangeAnySpecialist" -> SQLTable("Belief_YieldChangeAnySpecialist",
      SQLColumn("BeliefType", "text"),
      SQLColumn("YieldType", "integer"),
      SQLColumn("Yield", "integer")),
    "Belief_YieldChangePerForeignCity" -> SQLTable("Belief_YieldChangePerForeignCity",
      SQLColumn("BeliefType", "text"),
      SQLColumn("YieldType", "integer"),
      SQLColumn("Yield", "integer")),
    "Belief_YieldChangePerXForeignFollowers" -> SQLTable("Belief_YieldChangePerXForeignFollowers",
      SQLColumn("BeliefType", "text"),
      SQLColumn("YieldType", "integer"),
      SQLColumn("ForeignFollowers", "integer")),
    "Belief_YieldChangeTradeRoute" -> SQLTable("Belief_YieldChangeTradeRoute",
      SQLColumn("BeliefType", "text"),
      SQLColumn("YieldType", "integer"),
      SQLColumn("Yield", "integer")),
    "Belief_YieldChangeNaturalWonder" -> SQLTable("Belief_YieldChangeNaturalWonder",
      SQLColumn("BeliefType", "text"),
      SQLColumn("YieldType", "integer"),
      SQLColumn("Yield", "integer")),
    "Belief_YieldChangeWorldWonder" -> SQLTable("Belief_YieldChangeWorldWonder",
      SQLColumn("BeliefType", "text"),
      SQLColumn("YieldType", "integer"),
      SQLColumn("Yield", "integer")),
    "Belief_YieldModifierNaturalWonder" -> SQLTable("Belief_YieldModifierNaturalWonder",
      SQLColumn("BeliefType", "text"),
      SQLColumn("YieldType", "integer"),
      SQLColumn("Yield", "integer")),
    "Technologies" -> SQLTable("Technologies",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("AIWeight", "integer"),
      SQLColumn("AITradeModifier", "integer"),
      SQLColumn("Cost", "integer"),
      SQLColumn("AdvancedStartCost", "integer"),
      SQLColumn("Era", "text"),
      SQLColumn("FirstFreeUnitClass", "text"),
      SQLColumn("FeatureProductionModifier", "integer"),
      SQLColumn("UnitFortificationModifier", "integer"),
      SQLColumn("UnitBaseHealModifier", "integer"),
      SQLColumn("WorkerSpeedModifier", "integer"),
      SQLColumn("FirstFreeTechs", "integer"),
      SQLColumn("EmbarkedMoveChange", "integer"),
      SQLColumn("InternationalTradeRoutesChange", "integer"),
      SQLColumn("InfluenceSpreadModifier", "integer"),
      SQLColumn("ExtraVotesPerDiplomat", "integer"),
      SQLColumn("EndsGame", "boolean"),
      SQLColumn("AllowsEmbarking", "boolean"),
      SQLColumn("AllowsDefensiveEmbarking", "boolean"),
      SQLColumn("EmbarkedAllWaterPassage", "boolean"),
      SQLColumn("AllowsBarbarianBoats", "boolean"),
      SQLColumn("Repeat", "boolean"),
      SQLColumn("Trade", "boolean"),
      SQLColumn("Disable", "boolean"),
      SQLColumn("GoodyTech", "boolean"),
      SQLColumn("ExtraWaterSeeFrom", "boolean"),
      SQLColumn("MapCentering", "boolean"),
      SQLColumn("MapVisible", "boolean"),
      SQLColumn("MapTrading", "boolean"),
      SQLColumn("TechTrading", "boolean"),
      SQLColumn("GoldTrading", "boolean"),
      SQLColumn("AllowEmbassyTradingAllowed", "boolean"),
      SQLColumn("OpenBordersTradingAllowed", "boolean"),
      SQLColumn("DefensivePactTradingAllowed", "boolean"),
      SQLColumn("ResearchAgreementTradingAllowed", "boolean"),
      SQLColumn("TradeAgreementTradingAllowed", "boolean"),
      SQLColumn("PermanentAllianceTradingAllowed", "boolean"),
      SQLColumn("BridgeBuilding", "boolean"),
      SQLColumn("WaterWork", "boolean"),
      SQLColumn("TriggersArchaeologicalSites", "boolean"),
      SQLColumn("AllowsWorldCongress", "boolean"),
      SQLColumn("GridX", "integer"),
      SQLColumn("GridY", "integer"),
      SQLColumn("Quote", "text"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("ScenarioTechButton", "integer"),
      SQLColumn("IconAtlas", "text"),
      SQLColumn("AudioIntro", "text"),
      SQLColumn("AudioIntroHeader", "text")),
    "Technology_DomainExtraMoves" -> SQLTable("Technology_DomainExtraMoves",
      SQLColumn("TechType", "text"),
      SQLColumn("DomainType", "text"),
      SQLColumn("Moves", "integer")),
    "Technology_TradeRouteDomainExtraRange" -> SQLTable("Technology_TradeRouteDomainExtraRange",
      SQLColumn("TechType", "text"),
      SQLColumn("DomainType", "text"),
      SQLColumn("Range", "integer")),
    "Technology_Flavors" -> SQLTable("Technology_Flavors",
      SQLColumn("TechType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "Technology_ORPrereqTechs" -> SQLTable("Technology_ORPrereqTechs",
      SQLColumn("TechType", "text"),
      SQLColumn("PrereqTech", "text")),
    "Technology_PrereqTechs" -> SQLTable("Technology_PrereqTechs",
      SQLColumn("TechType", "text"),
      SQLColumn("PrereqTech", "text")),
    "Technology_FreePromotions" -> SQLTable("Technology_FreePromotions",
      SQLColumn("TechType", "text"),
      SQLColumn("PromotionType", "text")),
    "Features" -> SQLTable("Features",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("ArtDefineTag", "text"),
      SQLColumn("StartingLocationWeight", "integer"),
      SQLColumn("Movement", "integer"),
      SQLColumn("SeeThrough", "integer"),
      SQLColumn("Defense", "integer"),
      SQLColumn("InfluenceCost", "integer"),
      SQLColumn("AppearanceProbability", "integer"),
      SQLColumn("DisappearanceProbability", "integer"),
      SQLColumn("Growth", "integer"),
      SQLColumn("GrowthTerrainType", "text"),
      SQLColumn("TurnDamage", "integer"),
      SQLColumn("AdjacentUnitFreePromotion", "text"),
      SQLColumn("FirstFinderGold", "integer"),
      SQLColumn("InBorderHappiness", "integer"),
      SQLColumn("OccurrenceFrequency", "integer"),
      SQLColumn("YieldNotAdditive", "boolean"),
      SQLColumn("NoCoast", "boolean"),
      SQLColumn("NoRiver", "boolean"),
      SQLColumn("NoAdjacent", "boolean"),
      SQLColumn("RequiresFlatlands", "boolean"),
      SQLColumn("RequiresRiver", "boolean"),
      SQLColumn("AddsFreshWater", "boolean"),
      SQLColumn("Impassable", "boolean"),
      SQLColumn("NoCity", "boolean"),
      SQLColumn("NoImprovement", "boolean"),
      SQLColumn("VisibleAlways", "boolean"),
      SQLColumn("NukeImmune", "boolean"),
      SQLColumn("NaturalWonder", "boolean"),
      SQLColumn("Rough", "boolean"),
      SQLColumn("WorldSoundscapeAudioScript", "text"),
      SQLColumn("EffectType", "text"),
      SQLColumn("EffectProbability", "integer"),
      SQLColumn("EffectTypeTag", "text"),
      SQLColumn("AdvancedStartRemoveCost", "integer"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text")),
    "FakeFeatures" -> SQLTable("FakeFeatures",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("ArtDefineTag", "text"),
      SQLColumn("StartingLocationWeight", "integer"),
      SQLColumn("Movement", "integer"),
      SQLColumn("SeeThrough", "integer"),
      SQLColumn("Defense", "integer"),
      SQLColumn("InfluenceCost", "integer"),
      SQLColumn("AppearanceProbability", "integer"),
      SQLColumn("DisappearanceProbability", "integer"),
      SQLColumn("Growth", "integer"),
      SQLColumn("GrowthTerrainType", "text"),
      SQLColumn("TurnDamage", "integer"),
      SQLColumn("YieldNotAdditive", "boolean"),
      SQLColumn("NoCoast", "boolean"),
      SQLColumn("NoRiver", "boolean"),
      SQLColumn("NoAdjacent", "boolean"),
      SQLColumn("RequiresFlatlands", "boolean"),
      SQLColumn("RequiresRiver", "boolean"),
      SQLColumn("AddsFreshWater", "boolean"),
      SQLColumn("Impassable", "boolean"),
      SQLColumn("NoCity", "boolean"),
      SQLColumn("NoImprovement", "boolean"),
      SQLColumn("VisibleAlways", "boolean"),
      SQLColumn("NukeImmune", "boolean"),
      SQLColumn("NaturalWonder", "boolean"),
      SQLColumn("Rough", "boolean"),
      SQLColumn("WorldSoundscapeAudioScript", "text"),
      SQLColumn("EffectType", "text"),
      SQLColumn("EffectProbability", "integer"),
      SQLColumn("EffectTypeTag", "text"),
      SQLColumn("AdvancedStartRemoveCost", "integer"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text")),
    "Feature_YieldChanges" -> SQLTable("Feature_YieldChanges",
      SQLColumn("FeatureType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Feature_RiverYieldChanges" -> SQLTable("Feature_RiverYieldChanges",
      SQLColumn("FeatureType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Feature_HillsYieldChanges" -> SQLTable("Feature_HillsYieldChanges",
      SQLColumn("FeatureType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Feature_TerrainBooleans" -> SQLTable("Feature_TerrainBooleans",
      SQLColumn("FeatureType", "text"),
      SQLColumn("TerrainType", "text")),
    "Natural_Wonder_Placement" -> SQLTable("Natural_Wonder_Placement",
      SQLColumn("ID", "integer"),
      SQLColumn("NaturalWonderType", "text"),
      SQLColumn("EligibilityMethodNumber", "integer"),
      SQLColumn("OccurrenceFrequency", "integer"),
      SQLColumn("RequireBiggestLandmass", "boolean"),
      SQLColumn("AvoidBiggestLandmass", "boolean"),
      SQLColumn("RequireFreshWater", "boolean"),
      SQLColumn("AvoidFreshWater", "boolean"),
      SQLColumn("LandBased", "boolean"),
      SQLColumn("RequireLandAdjacentToOcean", "boolean"),
      SQLColumn("AvoidLandAdjacentToOcean", "boolean"),
      SQLColumn("RequireLandOnePlotInland", "boolean"),
      SQLColumn("AvoidLandOnePlotInland", "boolean"),
      SQLColumn("RequireLandTwoOrMorePlotsInland", "boolean"),
      SQLColumn("AvoidLandTwoOrMorePlotsInland", "boolean"),
      SQLColumn("CoreTileCanBeAnyPlotType", "boolean"),
      SQLColumn("CoreTileCanBeFlatland", "boolean"),
      SQLColumn("CoreTileCanBeHills", "boolean"),
      SQLColumn("CoreTileCanBeMountain", "boolean"),
      SQLColumn("CoreTileCanBeOcean", "boolean"),
      SQLColumn("CoreTileCanBeAnyTerrainType", "boolean"),
      SQLColumn("CoreTileCanBeGrass", "boolean"),
      SQLColumn("CoreTileCanBePlains", "boolean"),
      SQLColumn("CoreTileCanBeDesert", "boolean"),
      SQLColumn("CoreTileCanBeTundra", "boolean"),
      SQLColumn("CoreTileCanBeSnow", "boolean"),
      SQLColumn("CoreTileCanBeShallowWater", "boolean"),
      SQLColumn("CoreTileCanBeDeepWater", "boolean"),
      SQLColumn("CoreTileCanBeAnyFeatureType", "boolean"),
      SQLColumn("CoreTileCanBeNoFeature", "boolean"),
      SQLColumn("CoreTileCanBeForest", "boolean"),
      SQLColumn("CoreTileCanBeJungle", "boolean"),
      SQLColumn("CoreTileCanBeOasis", "boolean"),
      SQLColumn("CoreTileCanBeFloodPlains", "boolean"),
      SQLColumn("CoreTileCanBeMarsh", "boolean"),
      SQLColumn("CoreTileCanBeIce", "boolean"),
      SQLColumn("CoreTileCanBeAtoll", "boolean"),
      SQLColumn("AdjacentTilesCareAboutPlotTypes", "boolean"),
      SQLColumn("AdjacentTilesAvoidAnyland", "boolean"),
      SQLColumn("AdjacentTilesRequireFlatland", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentFlatland", "integer"),
      SQLColumn("AdjacentTilesRequireHills", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentHills", "integer"),
      SQLColumn("AdjacentTilesRequireMountain", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentMountain", "integer"),
      SQLColumn("AdjacentTilesRequireHillsPlusMountains", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentHillsPlusMountains", "integer"),
      SQLColumn("AdjacentTilesRequireOcean", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentOcean", "integer"),
      SQLColumn("AdjacentTilesAvoidFlatland", "boolean"),
      SQLColumn("MaximumAllowedAdjacentFlatland", "integer"),
      SQLColumn("AdjacentTilesAvoidHills", "boolean"),
      SQLColumn("MaximumAllowedAdjacentHills", "integer"),
      SQLColumn("AdjacentTilesAvoidMountain", "boolean"),
      SQLColumn("MaximumAllowedAdjacentMountain", "integer"),
      SQLColumn("AdjacentTilesAvoidHillsPlusMountains", "boolean"),
      SQLColumn("MaximumAllowedAdjacentHillsPlusMountains", "integer"),
      SQLColumn("AdjacentTilesAvoidOcean", "boolean"),
      SQLColumn("MaximumAllowedAdjacentOcean", "integer"),
      SQLColumn("AdjacentTilesCareAboutTerrainTypes", "boolean"),
      SQLColumn("AdjacentTilesRequireGrass", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentGrass", "integer"),
      SQLColumn("AdjacentTilesRequirePlains", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentPlains", "integer"),
      SQLColumn("AdjacentTilesRequireDesert", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentDesert", "integer"),
      SQLColumn("AdjacentTilesRequireTundra", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentTundra", "integer"),
      SQLColumn("AdjacentTilesRequireSnow", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentSnow", "integer"),
      SQLColumn("AdjacentTilesRequireShallowWater", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentShallowWater", "integer"),
      SQLColumn("AdjacentTilesRequireDeepWater", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentDeepWater", "integer"),
      SQLColumn("AdjacentTilesAvoidGrass", "boolean"),
      SQLColumn("MaximumAllowedAdjacentGrass", "integer"),
      SQLColumn("AdjacentTilesAvoidPlains", "boolean"),
      SQLColumn("MaximumAllowedAdjacentPlains", "integer"),
      SQLColumn("AdjacentTilesAvoidDesert", "boolean"),
      SQLColumn("MaximumAllowedAdjacentDesert", "integer"),
      SQLColumn("AdjacentTilesAvoidTundra", "boolean"),
      SQLColumn("MaximumAllowedAdjacentTundra", "integer"),
      SQLColumn("AdjacentTilesAvoidSnow", "boolean"),
      SQLColumn("MaximumAllowedAdjacentSnow", "integer"),
      SQLColumn("AdjacentTilesAvoidShallowWater", "boolean"),
      SQLColumn("MaximumAllowedAdjacentShallowWater", "integer"),
      SQLColumn("AdjacentTilesAvoidDeepWater", "boolean"),
      SQLColumn("MaximumAllowedAdjacentDeepWater", "integer"),
      SQLColumn("AdjacentTilesCareAboutFeatureTypes", "boolean"),
      SQLColumn("AdjacentTilesRequireNoFeature", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentNoFeature", "integer"),
      SQLColumn("AdjacentTilesRequireForest", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentForest", "integer"),
      SQLColumn("AdjacentTilesRequireJungle", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentJungle", "integer"),
      SQLColumn("AdjacentTilesRequireOasis", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentOasis", "integer"),
      SQLColumn("AdjacentTilesRequireFloodPlains", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentFloodPlains", "integer"),
      SQLColumn("AdjacentTilesRequireMarsh", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentMarsh", "integer"),
      SQLColumn("AdjacentTilesRequireIce", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentIce", "integer"),
      SQLColumn("AdjacentTilesRequireAtoll", "boolean"),
      SQLColumn("RequiredNumberOfAdjacentAtoll", "integer"),
      SQLColumn("AdjacentTilesAvoidNoFeature", "boolean"),
      SQLColumn("MaximumAllowedAdjacentNoFeature", "integer"),
      SQLColumn("AdjacentTilesAvoidForest", "boolean"),
      SQLColumn("MaximumAllowedAdjacentForest", "integer"),
      SQLColumn("AdjacentTilesAvoidJungle", "boolean"),
      SQLColumn("MaximumAllowedAdjacentJungle", "integer"),
      SQLColumn("AdjacentTilesAvoidOasis", "boolean"),
      SQLColumn("MaximumAllowedAdjacentOasis", "integer"),
      SQLColumn("AdjacentTilesAvoidFloodPlains", "boolean"),
      SQLColumn("MaximumAllowedAdjacentFloodPlains", "integer"),
      SQLColumn("AdjacentTilesAvoidMarsh", "boolean"),
      SQLColumn("MaximumAllowedAdjacentMarsh", "integer"),
      SQLColumn("AdjacentTilesAvoidIce", "boolean"),
      SQLColumn("MaximumAllowedAdjacentIce", "integer"),
      SQLColumn("AdjacentTilesAvoidAtoll", "boolean"),
      SQLColumn("MaximumAllowedAdjacentAtoll", "integer"),
      SQLColumn("TileChangesMethodNumber", "integer"),
      SQLColumn("ChangeCoreTileToMountain", "boolean"),
      SQLColumn("ChangeCoreTileToFlatland", "boolean"),
      SQLColumn("ChangeCoreTileTerrainToGrass", "boolean"),
      SQLColumn("ChangeCoreTileTerrainToPlains", "boolean"),
      SQLColumn("SetAdjacentTilesToShallowWater", "boolean")),
    "Improvements" -> SQLTable("Improvements",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("ArtDefineTag", "text"),
      SQLColumn("WorldSoundscapeAudioScript", "text"),
      SQLColumn("ImprovementPillage", "text"),
      SQLColumn("ImprovementUpgrade", "text"),
      SQLColumn("SpecificCivRequired", "boolean"),
      SQLColumn("CivilizationType", "text"),
      SQLColumn("HillsMakesValid", "boolean"),
      SQLColumn("FreshWaterMakesValid", "boolean"),
      SQLColumn("RiverSideMakesValid", "boolean"),
      SQLColumn("NoFreshWater", "boolean"),
      SQLColumn("RequiresFlatlands", "boolean"),
      SQLColumn("RequiresFlatlandsOrFreshWater", "boolean"),
      SQLColumn("RequiresFeature", "boolean"),
      SQLColumn("RequiresImprovement", "boolean"),
      SQLColumn("RemovesResource", "boolean"),
      SQLColumn("PromptWhenComplete", "boolean"),
      SQLColumn("Coastal", "boolean"),
      SQLColumn("Water", "boolean"),
      SQLColumn("DestroyedWhenPillaged", "boolean"),
      SQLColumn("DisplacePillager", "boolean"),
      SQLColumn("BuildableOnResources", "boolean"),
      SQLColumn("BarbarianCamp", "boolean"),
      SQLColumn("Goody", "boolean"),
      SQLColumn("Permanent", "boolean"),
      SQLColumn("OutsideBorders", "boolean"),
      SQLColumn("InAdjacentFriendly", "boolean"),
      SQLColumn("IgnoreOwnership", "boolean"),
      SQLColumn("OnlyCityStateTerritory", "boolean"),
      SQLColumn("GraphicalOnly", "boolean"),
      SQLColumn("CreatedByGreatPerson", "boolean"),
      SQLColumn("NoTwoAdjacent", "boolean"),
      SQLColumn("AdjacentLuxury", "boolean"),
      SQLColumn("AllowsWalkWater", "boolean"),
      SQLColumn("CultureAdjacentSameType", "integer"),
      SQLColumn("TilesPerGoody", "integer"),
      SQLColumn("GoodyRange", "integer"),
      SQLColumn("FeatureGrowth", "integer"),
      SQLColumn("UpgradeTime", "integer"),
      SQLColumn("RiverSideUpgradeMod", "integer"),
      SQLColumn("CoastalLandUpgradeMod", "integer"),
      SQLColumn("HillsUpgradeMod", "integer"),
      SQLColumn("FreshWaterUpgradeMod", "integer"),
      SQLColumn("DefenseModifier", "integer"),
      SQLColumn("NearbyEnemyDamage", "integer"),
      SQLColumn("PillageGold", "integer"),
      SQLColumn("ResourceExtractionMod", "integer"),
      SQLColumn("LuxuryCopiesSiphonedFromMinor", "integer"),
      SQLColumn("GoldMaintenance", "integer"),
      SQLColumn("CultureBombRadius", "integer"),
      SQLColumn("RequiresXAdjacentLand", "integer"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text")),
    "Improvement_Flavors" -> SQLTable("Improvement_Flavors",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "Improvement_Yields" -> SQLTable("Improvement_Yields",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Improvement_YieldPerEra" -> SQLTable("Improvement_YieldPerEra",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Improvement_AdjacentCityYields" -> SQLTable("Improvement_AdjacentCityYields",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Improvement_CoastalLandYields" -> SQLTable("Improvement_CoastalLandYields",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Improvement_FreshWaterYields" -> SQLTable("Improvement_FreshWaterYields",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Improvement_HillsYields" -> SQLTable("Improvement_HillsYields",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Improvement_AdjacentMountainYieldChanges" -> SQLTable("Improvement_AdjacentMountainYieldChanges",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Improvement_PrereqNatureYields" -> SQLTable("Improvement_PrereqNatureYields",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Improvement_RiverSideYields" -> SQLTable("Improvement_RiverSideYields",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Improvement_ValidTerrains" -> SQLTable("Improvement_ValidTerrains",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("TerrainType", "text")),
    "Improvement_ValidFeatures" -> SQLTable("Improvement_ValidFeatures",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("FeatureType", "text")),
    "Improvement_ValidImprovements" -> SQLTable("Improvement_ValidImprovements",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("PrereqImprovement", "text")),
    "Improvement_ResourceTypes" -> SQLTable("Improvement_ResourceTypes",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("ResourceMakesValid", "boolean"),
      SQLColumn("ResourceTrade", "boolean"),
      SQLColumn("DiscoveryRand", "integer"),
      SQLColumn("QuantityRequirement", "integer")),
    "Improvement_ResourceType_Yields" -> SQLTable("Improvement_ResourceType_Yields",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Improvement_RouteYieldChanges" -> SQLTable("Improvement_RouteYieldChanges",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("RouteType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Improvement_TechYieldChanges" -> SQLTable("Improvement_TechYieldChanges",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("TechType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Improvement_TechNoFreshWaterYieldChanges" -> SQLTable("Improvement_TechNoFreshWaterYieldChanges",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("TechType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Improvement_TechFreshWaterYieldChanges" -> SQLTable("Improvement_TechFreshWaterYieldChanges",
      SQLColumn("ImprovementType", "text"),
      SQLColumn("TechType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Resources" -> SQLTable("Resources",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("ResourceClassType", "text"),
      SQLColumn("ArtDefineTag", "text"),
      SQLColumn("AltArtDefineTag", "text"),
      SQLColumn("ArtDefineTagHeavy", "text"),
      SQLColumn("AltArtDefineTagHeavy", "text"),
      SQLColumn("TechReveal", "text"),
      SQLColumn("PolicyReveal", "text"),
      SQLColumn("TechCityTrade", "text"),
      SQLColumn("TechObsolete", "text"),
      SQLColumn("AIStopTradingEra", "text"),
      SQLColumn("CivilizationType", "text"),
      SQLColumn("Happiness", "integer"),
      SQLColumn("WonderProductionMod", "integer"),
      SQLColumn("WonderProductionModObsoleteEra", "text"),
      SQLColumn("StartingResourceQuantity", "integer"),
      SQLColumn("AITradeModifier", "integer"),
      SQLColumn("AIObjective", "integer"),
      SQLColumn("PlacementOrder", "integer"),
      SQLColumn("ConstAppearance", "integer"),
      SQLColumn("MinAreaSize", "integer"),
      SQLColumn("MinLatitude", "integer"),
      SQLColumn("MaxLatitude", "integer"),
      SQLColumn("RandApp1", "integer"),
      SQLColumn("RandApp2", "integer"),
      SQLColumn("RandApp3", "integer"),
      SQLColumn("RandApp4", "integer"),
      SQLColumn("Player", "integer"),
      SQLColumn("TilesPer", "integer"),
      SQLColumn("MinLandPercent", "integer"),
      SQLColumn("Unique", "integer"),
      SQLColumn("GroupRange", "integer"),
      SQLColumn("GroupRand", "integer"),
      SQLColumn("ResourceUsage", "integer"),
      SQLColumn("PresentOnAllValidPlots", "boolean"),
      SQLColumn("Area", "boolean"),
      SQLColumn("Hills", "boolean"),
      SQLColumn("Flatlands", "boolean"),
      SQLColumn("NoRiverSide", "boolean"),
      SQLColumn("Normalize", "boolean"),
      SQLColumn("OnlyMinorCivs", "boolean"),
      SQLColumn("IconString", "text"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text")),
    "Resource_YieldChanges" -> SQLTable("Resource_YieldChanges",
      SQLColumn("ResourceType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Resource_Flavors" -> SQLTable("Resource_Flavors",
      SQLColumn("ResourceType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "Resource_TerrainBooleans" -> SQLTable("Resource_TerrainBooleans",
      SQLColumn("ResourceType", "text"),
      SQLColumn("TerrainType", "text")),
    "Resource_FeatureBooleans" -> SQLTable("Resource_FeatureBooleans",
      SQLColumn("ResourceType", "text"),
      SQLColumn("FeatureType", "text")),
    "Resource_FeatureTerrainBooleans" -> SQLTable("Resource_FeatureTerrainBooleans",
      SQLColumn("ResourceType", "text"),
      SQLColumn("TerrainType", "text")),
    "Resource_QuantityTypes" -> SQLTable("Resource_QuantityTypes",
      SQLColumn("ResourceType", "text"),
      SQLColumn("Quantity", "integer")),
    "ResourceClasses" -> SQLTable("ResourceClasses",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("UniqueRange", "integer")),
    "Terrains" -> SQLTable("Terrains",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("ArtDefineTag", "text"),
      SQLColumn("Water", "boolean"),
      SQLColumn("Impassable", "boolean"),
      SQLColumn("Found", "boolean"),
      SQLColumn("FoundCoast", "boolean"),
      SQLColumn("FoundFreshWater", "boolean"),
      SQLColumn("Movement", "integer"),
      SQLColumn("SeeFrom", "integer"),
      SQLColumn("SeeThrough", "integer"),
      SQLColumn("BuildModifier", "integer"),
      SQLColumn("Defense", "integer"),
      SQLColumn("InfluenceCost", "integer"),
      SQLColumn("Button", "text"),
      SQLColumn("WorldSoundscapeAudioScript", "text"),
      SQLColumn("GraphicalOnly", "boolean"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("EffectTypeTag", "text"),
      SQLColumn("IconAtlas", "text")),
    "Terrain_Yields" -> SQLTable("Terrain_Yields",
      SQLColumn("TerrainType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Terrain_RiverYieldChanges" -> SQLTable("Terrain_RiverYieldChanges",
      SQLColumn("TerrainType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Terrain_HillsYieldChanges" -> SQLTable("Terrain_HillsYieldChanges",
      SQLColumn("TerrainType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Yields" -> SQLTable("Yields",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("IconString", "text"),
      SQLColumn("HillsChange", "integer"),
      SQLColumn("MountainChange", "integer"),
      SQLColumn("LakeChange", "integer"),
      SQLColumn("CityChange", "integer"),
      SQLColumn("PopulationChangeOffset", "integer"),
      SQLColumn("PopulationChangeDivisor", "integer"),
      SQLColumn("MinCity", "integer"),
      SQLColumn("GoldenAgeYield", "integer"),
      SQLColumn("GoldenAgeYieldThreshold", "integer"),
      SQLColumn("GoldenAgeYieldMod", "integer"),
      SQLColumn("AIWeightPercent", "integer")),
    "AnimationCategories" -> SQLTable("AnimationCategories",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("DefaultTo", "text"),
      SQLColumn("BaseID", "integer")),
    "AnimationPaths" -> SQLTable("AnimationPaths",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("MissionPath", "boolean")),
    "AnimationPath_Entries" -> SQLTable("AnimationPath_Entries",
      SQLColumn("AnimationPathType", "text"),
      SQLColumn("Category", "text"),
      SQLColumn("Operator", "text"),
      SQLColumn("Parameter", "float")),
    "Automates" -> SQLTable("Automates",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("DisabledHelp", "text"),
      SQLColumn("HotKey", "text"),
      SQLColumn("HotKeyAlt", "text"),
      SQLColumn("HotKeyPriority", "integer"),
      SQLColumn("HotKeyPriorityAlt", "integer"),
      SQLColumn("OrderPriority", "integer"),
      SQLColumn("AltDown", "boolean"),
      SQLColumn("AltDownAlt", "boolean"),
      SQLColumn("ShiftDown", "boolean"),
      SQLColumn("ShiftDownAlt", "boolean"),
      SQLColumn("CtrlDown", "boolean"),
      SQLColumn("CtrlDownAlt", "boolean"),
      SQLColumn("Visible", "boolean"),
      SQLColumn("ConfirmCommand", "boolean"),
      SQLColumn("Automate", "text"),
      SQLColumn("Command", "text"),
      SQLColumn("IconIndex", "integer"),
      SQLColumn("IconAtlas", "text")),
    "Builds" -> SQLTable("Builds",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("DisabledHelp", "text"),
      SQLColumn("Recommendation", "text"),
      SQLColumn("HotKey", "text"),
      SQLColumn("HotKeyAlt", "text"),
      SQLColumn("HotKeyPriority", "integer"),
      SQLColumn("HotKeyPriorityAlt", "integer"),
      SQLColumn("OrderPriority", "integer"),
      SQLColumn("AltDown", "boolean"),
      SQLColumn("AltDownAlt", "boolean"),
      SQLColumn("ShiftDown", "boolean"),
      SQLColumn("ShiftDownAlt", "boolean"),
      SQLColumn("CtrlDown", "boolean"),
      SQLColumn("CtrlDownAlt", "boolean"),
      SQLColumn("Time", "integer"),
      SQLColumn("Cost", "integer"),
      SQLColumn("CostIncreasePerImprovement", "integer"),
      SQLColumn("Kill", "boolean"),
      SQLColumn("Repair", "boolean"),
      SQLColumn("RemoveRoute", "boolean"),
      SQLColumn("Water", "boolean"),
      SQLColumn("CanBeEmbarked", "boolean"),
      SQLColumn("PrereqTech", "text"),
      SQLColumn("ImprovementType", "text"),
      SQLColumn("RouteType", "text"),
      SQLColumn("EntityEvent", "text"),
      SQLColumn("IconIndex", "integer"),
      SQLColumn("IconAtlas", "text"),
      SQLColumn("ShowInPedia", "boolean"),
      SQLColumn("ShowInTechTree", "boolean")),
    "BuildFeatures" -> SQLTable("BuildFeatures",
      SQLColumn("BuildType", "text"),
      SQLColumn("FeatureType", "text"),
      SQLColumn("PrereqTech", "text"),
      SQLColumn("Time", "integer"),
      SQLColumn("Production", "integer"),
      SQLColumn("Cost", "integer"),
      SQLColumn("Remove", "boolean")),
    "Build_TechTimeChanges" -> SQLTable("Build_TechTimeChanges",
      SQLColumn("BuildType", "text"),
      SQLColumn("TechType", "text"),
      SQLColumn("TimeChange", "integer")),
    "Commands" -> SQLTable("Commands",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("DisabledHelp", "text"),
      SQLColumn("HotKey", "text"),
      SQLColumn("HotKeyAlt", "text"),
      SQLColumn("HotKeyPriority", "integer"),
      SQLColumn("HotKeyPriorityAlt", "integer"),
      SQLColumn("OrderPriority", "integer"),
      SQLColumn("AltDown", "boolean"),
      SQLColumn("AltDownAlt", "boolean"),
      SQLColumn("ShiftDown", "boolean"),
      SQLColumn("ShiftDownAlt", "boolean"),
      SQLColumn("CtrlDown", "boolean"),
      SQLColumn("CtrlDownAlt", "boolean"),
      SQLColumn("Visible", "boolean"),
      SQLColumn("All", "boolean"),
      SQLColumn("ConfirmCommand", "boolean"),
      SQLColumn("Automate", "text"),
      SQLColumn("IconIndex", "integer"),
      SQLColumn("IconAtlas", "text")),
    "Controls" -> SQLTable("Controls",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("DisabledHelp", "text"),
      SQLColumn("Button", "text"),
      SQLColumn("HotKey", "text"),
      SQLColumn("HotKeyAlt", "text"),
      SQLColumn("HotKeyPriority", "integer"),
      SQLColumn("HotKeyPriorityAlt", "integer"),
      SQLColumn("AltDown", "boolean"),
      SQLColumn("AltDownAlt", "boolean"),
      SQLColumn("ShiftDown", "boolean"),
      SQLColumn("ShiftDownAlt", "boolean"),
      SQLColumn("CtrlDown", "boolean"),
      SQLColumn("CtrlDownAlt", "boolean")),
    "EntityEvents" -> SQLTable("EntityEvents",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("UpdateFormation", "boolean")),
    "EntityEvent_AnimationPaths" -> SQLTable("EntityEvent_AnimationPaths",
      SQLColumn("EntityEventType", "text"),
      SQLColumn("AnimationPathType", "text")),
    "Missions" -> SQLTable("Missions",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("DisabledHelp", "text"),
      SQLColumn("HotKey", "text"),
      SQLColumn("HotKeyAlt", "text"),
      SQLColumn("HotKeyPriority", "integer"),
      SQLColumn("HotKeyPriorityAlt", "integer"),
      SQLColumn("OrderPriority", "integer"),
      SQLColumn("AltDown", "boolean"),
      SQLColumn("AltDownAlt", "boolean"),
      SQLColumn("ShiftDown", "boolean"),
      SQLColumn("ShiftDownAlt", "boolean"),
      SQLColumn("CtrlDown", "boolean"),
      SQLColumn("CtrlDownAlt", "boolean"),
      SQLColumn("Visible", "boolean"),
      SQLColumn("Waypoint", "text"),
      SQLColumn("Time", "integer"),
      SQLColumn("Target", "boolean"),
      SQLColumn("Build", "boolean"),
      SQLColumn("Sound", "boolean"),
      SQLColumn("EntityEventType", "text"),
      SQLColumn("IconIndex", "integer"),
      SQLColumn("IconAtlas", "text")),
    "MultiUnitPositions" -> SQLTable("MultiUnitPositions",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Name", "text")),
    "MultiUnitFormations" -> SQLTable("MultiUnitFormations",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Name", "text"),
      SQLColumn("RequiresNavalUnitConsistency", "boolean")),
    "MultiUnitFormation_SlotEntries" -> SQLTable("MultiUnitFormation_SlotEntries",
      SQLColumn("MultiUnitFormationType", "text"),
      SQLColumn("PrimaryUnitType", "text"),
      SQLColumn("SecondaryUnitType", "text"),
      SQLColumn("MultiUnitPositionType", "text"),
      SQLColumn("RequiredSlot", "boolean")),
    "SpecialUnits" -> SQLTable("SpecialUnits",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Valid", "boolean"),
      SQLColumn("CityLoad", "boolean")),
    "SpecialUnit_CarrierUnitAI" -> SQLTable("SpecialUnit_CarrierUnitAI",
      SQLColumn("SpecialUnitType", "text"),
      SQLColumn("UnitAIType", "text")),
    "SpecialUnit_ProductionTraits" -> SQLTable("SpecialUnit_ProductionTraits",
      SQLColumn("SpecialUnitType", "text"),
      SQLColumn("TraitType", "text"),
      SQLColumn("Trait", "integer")),
    "MovementRates" -> SQLTable("MovementRates",
      SQLColumn("Type", "text"),
      SQLColumn("NumHexes", "integer"),
      SQLColumn("TotalTime", "float"),
      SQLColumn("EaseIn", "float"),
      SQLColumn("EaseOut", "float"),
      SQLColumn("IndividualOffset", "float"),
      SQLColumn("RowOffset", "float"),
      SQLColumn("CurveRoll", "float"),
      SQLColumn("PathSubdivision", "integer")),
    "CivilianAttackPriorities" -> SQLTable("CivilianAttackPriorities",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text")),
    "Units" -> SQLTable("Units",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Civilopedia", "text"),
      SQLColumn("Strategy", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("Requirements", "text"),
      SQLColumn("Combat", "integer"),
      SQLColumn("RangedCombat", "integer"),
      SQLColumn("Cost", "integer"),
      SQLColumn("FaithCost", "integer"),
      SQLColumn("RequiresFaithPurchaseEnabled", "boolean"),
      SQLColumn("PurchaseOnly", "boolean"),
      SQLColumn("MoveAfterPurchase", "boolean"),
      SQLColumn("Moves", "integer"),
      SQLColumn("Immobile", "boolean"),
      SQLColumn("Range", "integer"),
      SQLColumn("BaseSightRange", "integer"),
      SQLColumn("Class", "text"),
      SQLColumn("Special", "text"),
      SQLColumn("Capture", "text"),
      SQLColumn("CombatClass", "text"),
      SQLColumn("Domain", "text"),
      SQLColumn("CivilianAttackPriority", "text"),
      SQLColumn("DefaultUnitAI", "text"),
      SQLColumn("Food", "boolean"),
      SQLColumn("NoBadGoodies", "boolean"),
      SQLColumn("RivalTerritory", "boolean"),
      SQLColumn("MilitarySupport", "boolean"),
      SQLColumn("MilitaryProduction", "boolean"),
      SQLColumn("Pillage", "boolean"),
      SQLColumn("PillagePrereqTech", "text"),
      SQLColumn("Found", "boolean"),
      SQLColumn("FoundAbroad", "boolean"),
      SQLColumn("CultureBombRadius", "integer"),
      SQLColumn("GoldenAgeTurns", "integer"),
      SQLColumn("FreePolicies", "integer"),
      SQLColumn("OneShotTourism", "integer"),
      SQLColumn("OneShotTourismPercentOthers", "integer"),
      SQLColumn("IgnoreBuildingDefense", "boolean"),
      SQLColumn("PrereqResources", "boolean"),
      SQLColumn("Mechanized", "boolean"),
      SQLColumn("Suicide", "boolean"),
      SQLColumn("CaptureWhileEmbarked", "boolean"),
      SQLColumn("PrereqTech", "text"),
      SQLColumn("ObsoleteTech", "text"),
      SQLColumn("GoodyHutUpgradeUnitClass", "text"),
      SQLColumn("HurryCostModifier", "integer"),
      SQLColumn("AdvancedStartCost", "integer"),
      SQLColumn("MinAreaSize", "integer"),
      SQLColumn("AirInterceptRange", "integer"),
      SQLColumn("AirUnitCap", "integer"),
      SQLColumn("NukeDamageLevel", "integer"),
      SQLColumn("WorkRate", "integer"),
      SQLColumn("NumFreeTechs", "integer"),
      SQLColumn("BaseBeakersTurnsToCount", "integer"),
      SQLColumn("BaseCultureTurnsToCount", "integer"),
      SQLColumn("RushBuilding", "boolean"),
      SQLColumn("BaseHurry", "integer"),
      SQLColumn("HurryMultiplier", "integer"),
      SQLColumn("BaseGold", "integer"),
      SQLColumn("NumGoldPerEra", "integer"),
      SQLColumn("SpreadReligion", "boolean"),
      SQLColumn("RemoveHeresy", "boolean"),
      SQLColumn("ReligionSpreads", "integer"),
      SQLColumn("ReligiousStrength", "integer"),
      SQLColumn("FoundReligion", "boolean"),
      SQLColumn("RequiresEnhancedReligion", "boolean"),
      SQLColumn("ProhibitsSpread", "boolean"),
      SQLColumn("CanBuyCityState", "boolean"),
      SQLColumn("CombatLimit", "integer"),
      SQLColumn("RangeAttackOnlyInDomain", "boolean"),
      SQLColumn("RangeAttackIgnoreLOS", "boolean"),
      SQLColumn("Trade", "boolean"),
      SQLColumn("NumExoticGoods", "integer"),
      SQLColumn("PolicyType", "text"),
      SQLColumn("RangedCombatLimit", "integer"),
      SQLColumn("XPValueAttack", "integer"),
      SQLColumn("XPValueDefense", "integer"),
      SQLColumn("SpecialCargo", "text"),
      SQLColumn("DomainCargo", "text"),
      SQLColumn("Conscription", "integer"),
      SQLColumn("ExtraMaintenanceCost", "integer"),
      SQLColumn("NoMaintenance", "boolean"),
      SQLColumn("Unhappiness", "integer"),
      SQLColumn("UnitArtInfo", "text"),
      SQLColumn("UnitArtInfoCulturalVariation", "boolean"),
      SQLColumn("UnitArtInfoEraVariation", "boolean"),
      SQLColumn("ProjectPrereq", "text"),
      SQLColumn("SpaceshipProject", "text"),
      SQLColumn("LeaderPromotion", "text"),
      SQLColumn("LeaderExperience", "integer"),
      SQLColumn("DontShowYields", "boolean"),
      SQLColumn("ShowInPedia", "boolean"),
      SQLColumn("MoveRate", "text"),
      SQLColumn("UnitFlagIconOffset", "integer"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text"),
      SQLColumn("UnitFlagAtlas", "text")),
    "Unit_AITypes" -> SQLTable("Unit_AITypes",
      SQLColumn("UnitType", "text"),
      SQLColumn("UnitAIType", "text")),
    "Unit_Buildings" -> SQLTable("Unit_Buildings",
      SQLColumn("UnitType", "text"),
      SQLColumn("BuildingType", "text")),
    "Unit_BuildingClassRequireds" -> SQLTable("Unit_BuildingClassRequireds",
      SQLColumn("UnitType", "text"),
      SQLColumn("BuildingClassType", "text")),
    "Unit_ProductionModifierBuildings" -> SQLTable("Unit_ProductionModifierBuildings",
      SQLColumn("UnitType", "text"),
      SQLColumn("BuildingType", "text"),
      SQLColumn("ProductionModifier", "integer")),
    "Unit_Builds" -> SQLTable("Unit_Builds",
      SQLColumn("UnitType", "text"),
      SQLColumn("BuildType", "text")),
    "Unit_ClassUpgrades" -> SQLTable("Unit_ClassUpgrades",
      SQLColumn("UnitType", "text"),
      SQLColumn("UnitClassType", "text")),
    "Unit_FreePromotions" -> SQLTable("Unit_FreePromotions",
      SQLColumn("UnitType", "text"),
      SQLColumn("PromotionType", "text")),
    "Unit_Flavors" -> SQLTable("Unit_Flavors",
      SQLColumn("UnitType", "text"),
      SQLColumn("FlavorType", "text"),
      SQLColumn("Flavor", "integer")),
    "Unit_GreatPersons" -> SQLTable("Unit_GreatPersons",
      SQLColumn("UnitType", "text"),
      SQLColumn("GreatPersonType", "text")),
    "Unit_ResourceQuantityRequirements" -> SQLTable("Unit_ResourceQuantityRequirements",
      SQLColumn("UnitType", "text"),
      SQLColumn("ResourceType", "text"),
      SQLColumn("Cost", "integer")),
    "Unit_UniqueNames" -> SQLTable("Unit_UniqueNames",
      SQLColumn("UnitType", "text"),
      SQLColumn("UniqueName", "text"),
      SQLColumn("GreatWorkType", "text")),
    "Unit_YieldFromKills" -> SQLTable("Unit_YieldFromKills",
      SQLColumn("UnitType", "text"),
      SQLColumn("YieldType", "text"),
      SQLColumn("Yield", "integer")),
    "Unit_NotAITypes" -> SQLTable("Unit_NotAITypes",
      SQLColumn("UnitType", "text"),
      SQLColumn("UnitAIType", "text")),
    "Unit_ProductionTraits" -> SQLTable("Unit_ProductionTraits",
      SQLColumn("UnitType", "text"),
      SQLColumn("TraitType", "text"),
      SQLColumn("Trait", "integer")),
    "Unit_TechTypes" -> SQLTable("Unit_TechTypes",
      SQLColumn("UnitType", "text"),
      SQLColumn("TechType", "text")),
    "UnitClasses" -> SQLTable("UnitClasses",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("MaxGlobalInstances", "integer"),
      SQLColumn("MaxTeamInstances", "integer"),
      SQLColumn("MaxPlayerInstances", "integer"),
      SQLColumn("InstanceCostModifier", "integer"),
      SQLColumn("DefaultUnit", "text")),
    "UnitPromotions" -> SQLTable("UnitPromotions",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("DisabledHelp", "text"),
      SQLColumn("Button", "text"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text"),
      SQLColumn("HotKey", "text"),
      SQLColumn("HotKeyAlt", "text"),
      SQLColumn("HotKeyPriority", "integer"),
      SQLColumn("HotKeyPriorityAlt", "integer"),
      SQLColumn("OrderPriority", "integer"),
      SQLColumn("AltDown", "boolean"),
      SQLColumn("AltDownAlt", "boolean"),
      SQLColumn("ShiftDown", "boolean"),
      SQLColumn("ShiftDownAlt", "boolean"),
      SQLColumn("CtrlDown", "boolean"),
      SQLColumn("CtrlDownAlt", "boolean"),
      SQLColumn("Sound", "text"),
      SQLColumn("CannotBeChosen", "boolean"),
      SQLColumn("LostWithUpgrade", "boolean"),
      SQLColumn("NotWithUpgrade", "boolean"),
      SQLColumn("InstaHeal", "boolean"),
      SQLColumn("Leader", "boolean"),
      SQLColumn("Blitz", "boolean"),
      SQLColumn("Amphib", "boolean"),
      SQLColumn("River", "boolean"),
      SQLColumn("EnemyRoute", "boolean"),
      SQLColumn("RivalTerritory", "boolean"),
      SQLColumn("MustSetUpToRangedAttack", "boolean"),
      SQLColumn("RangedSupportFire", "boolean"),
      SQLColumn("CanMoveAfterAttacking", "boolean"),
      SQLColumn("AlwaysHeal", "boolean"),
      SQLColumn("HealOutsideFriendly", "boolean"),
      SQLColumn("HillsDoubleMove", "boolean"),
      SQLColumn("RoughTerrainEndsTurn", "boolean"),
      SQLColumn("IgnoreTerrainCost", "boolean"),
      SQLColumn("HoveringUnit", "boolean"),
      SQLColumn("FlatMovementCost", "boolean"),
      SQLColumn("CanMoveImpassable", "boolean"),
      SQLColumn("NoCapture", "boolean"),
      SQLColumn("OnlyDefensive", "boolean"),
      SQLColumn("NoDefensiveBonus", "boolean"),
      SQLColumn("NukeImmune", "boolean"),
      SQLColumn("HiddenNationality", "boolean"),
      SQLColumn("AlwaysHostile", "boolean"),
      SQLColumn("NoRevealMap", "boolean"),
      SQLColumn("Recon", "boolean"),
      SQLColumn("CanMoveAllTerrain", "boolean"),
      SQLColumn("FreePillageMoves", "boolean"),
      SQLColumn("AirSweepCapable", "boolean"),
      SQLColumn("AllowsEmbarkation", "boolean"),
      SQLColumn("EmbarkedAllWater", "boolean"),
      SQLColumn("HealIfDestroyExcludesBarbarians", "boolean"),
      SQLColumn("RangeAttackIgnoreLOS", "boolean"),
      SQLColumn("CityAttackOnly", "boolean"),
      SQLColumn("CaptureDefeatedEnemy", "boolean"),
      SQLColumn("HealOnPillage", "boolean"),
      SQLColumn("IgnoreGreatGeneralBenefit", "boolean"),
      SQLColumn("IgnoreZOC", "boolean"),
      SQLColumn("HasPostCombatPromotions", "boolean"),
      SQLColumn("PostCombatPromotionsExclusive", "boolean"),
      SQLColumn("RangedAttackModifier", "integer"),
      SQLColumn("InterceptionCombatModifier", "integer"),
      SQLColumn("InterceptionDefenseDamageModifier", "integer"),
      SQLColumn("AirSweepCombatModifier", "integer"),
      SQLColumn("ExtraAttacks", "integer"),
      SQLColumn("ExtraNavalMovement", "integer"),
      SQLColumn("VisibilityChange", "integer"),
      SQLColumn("MovesChange", "integer"),
      SQLColumn("MoveDiscountChange", "integer"),
      SQLColumn("RangeChange", "integer"),
      SQLColumn("InterceptChanceChange", "integer"),
      SQLColumn("NumInterceptionChange", "integer"),
      SQLColumn("EvasionChange", "integer"),
      SQLColumn("CargoChange", "integer"),
      SQLColumn("EnemyHealChange", "integer"),
      SQLColumn("NeutralHealChange", "integer"),
      SQLColumn("FriendlyHealChange", "integer"),
      SQLColumn("SameTileHealChange", "integer"),
      SQLColumn("AdjacentTileHealChange", "integer"),
      SQLColumn("EnemyDamageChance", "integer"),
      SQLColumn("NeutralDamageChance", "integer"),
      SQLColumn("EnemyDamage", "integer"),
      SQLColumn("NeutralDamage", "integer"),
      SQLColumn("CombatPercent", "integer"),
      SQLColumn("CityAttack", "integer"),
      SQLColumn("CityDefense", "integer"),
      SQLColumn("RangedDefenseMod", "integer"),
      SQLColumn("HillsAttack", "integer"),
      SQLColumn("HillsDefense", "integer"),
      SQLColumn("OpenAttack", "integer"),
      SQLColumn("OpenRangedAttackMod", "integer"),
      SQLColumn("OpenDefense", "integer"),
      SQLColumn("RoughAttack", "integer"),
      SQLColumn("RoughRangedAttackMod", "integer"),
      SQLColumn("RoughDefense", "integer"),
      SQLColumn("AttackFortifiedMod", "integer"),
      SQLColumn("AttackWoundedMod", "integer"),
      SQLColumn("FlankAttackModifier", "integer"),
      SQLColumn("NearbyEnemyCombatMod", "integer"),
      SQLColumn("NearbyEnemyCombatRange", "integer"),
      SQLColumn("UpgradeDiscount", "integer"),
      SQLColumn("ExperiencePercent", "integer"),
      SQLColumn("AdjacentMod", "integer"),
      SQLColumn("AttackMod", "integer"),
      SQLColumn("DefenseMod", "integer"),
      SQLColumn("DropRange", "integer"),
      SQLColumn("GreatGeneral", "boolean"),
      SQLColumn("GreatAdmiral", "boolean"),
      SQLColumn("GreatGeneralModifier", "integer"),
      SQLColumn("GreatGeneralReceivesMovement", "boolean"),
      SQLColumn("GreatGeneralCombatModifier", "integer"),
      SQLColumn("FriendlyLandsModifier", "integer"),
      SQLColumn("FriendlyLandsAttackModifier", "integer"),
      SQLColumn("OutsideFriendlyLandsModifier", "integer"),
      SQLColumn("HPHealedIfDestroyEnemy", "integer"),
      SQLColumn("ExtraWithdrawal", "integer"),
      SQLColumn("EmbarkExtraVisibility", "integer"),
      SQLColumn("EmbarkDefenseModifier", "integer"),
      SQLColumn("CapitalDefenseModifier", "integer"),
      SQLColumn("CapitalDefenseFalloff", "integer"),
      SQLColumn("CityAttackPlunderModifier", "integer"),
      SQLColumn("ReligiousStrengthLossRivalTerritory", "integer"),
      SQLColumn("TradeMissionInfluenceModifier", "integer"),
      SQLColumn("TradeMissionGoldModifier", "integer"),
      SQLColumn("GoldenAgeValueFromKills", "integer"),
      SQLColumn("Sapper", "boolean"),
      SQLColumn("HeavyCharge", "boolean"),
      SQLColumn("LayerAnimationPath", "text"),
      SQLColumn("TechPrereq", "text"),
      SQLColumn("Invisible", "text"),
      SQLColumn("SeeInvisible", "text"),
      SQLColumn("PromotionPrereq", "text"),
      SQLColumn("PromotionPrereqOr1", "text"),
      SQLColumn("PromotionPrereqOr2", "text"),
      SQLColumn("PromotionPrereqOr3", "text"),
      SQLColumn("PromotionPrereqOr4", "text"),
      SQLColumn("PromotionPrereqOr5", "text"),
      SQLColumn("PromotionPrereqOr6", "text"),
      SQLColumn("PromotionPrereqOr7", "text"),
      SQLColumn("PromotionPrereqOr8", "text"),
      SQLColumn("PromotionPrereqOr9", "text"),
      SQLColumn("PediaType", "text"),
      SQLColumn("PediaEntry", "text")),
    "UnitPromotions_Terrains" -> SQLTable("UnitPromotions_Terrains",
      SQLColumn("PromotionType", "text"),
      SQLColumn("TerrainType", "text"),
      SQLColumn("Attack", "integer"),
      SQLColumn("Defense", "integer"),
      SQLColumn("DoubleMove", "boolean"),
      SQLColumn("Impassable", "boolean"),
      SQLColumn("PassableTech", "text"),
      SQLColumn("PediaType", "text")),
    "UnitPromotions_Features" -> SQLTable("UnitPromotions_Features",
      SQLColumn("PromotionType", "text"),
      SQLColumn("FeatureType", "text"),
      SQLColumn("Attack", "integer"),
      SQLColumn("Defense", "integer"),
      SQLColumn("DoubleMove", "boolean"),
      SQLColumn("Impassable", "boolean"),
      SQLColumn("PassableTech", "text"),
      SQLColumn("PediaType", "text")),
    "UnitPromotions_UnitClasses" -> SQLTable("UnitPromotions_UnitClasses",
      SQLColumn("PromotionType", "text"),
      SQLColumn("UnitClassType", "text"),
      SQLColumn("Modifier", "integer"),
      SQLColumn("Attack", "integer"),
      SQLColumn("Defense", "integer"),
      SQLColumn("PediaType", "text")),
    "UnitPromotions_Domains" -> SQLTable("UnitPromotions_Domains",
      SQLColumn("PromotionType", "text"),
      SQLColumn("DomainType", "text"),
      SQLColumn("Modifier", "integer"),
      SQLColumn("PediaType", "text")),
    "UnitPromotions_UnitCombatMods" -> SQLTable("UnitPromotions_UnitCombatMods",
      SQLColumn("PromotionType", "text"),
      SQLColumn("UnitCombatType", "text"),
      SQLColumn("Modifier", "integer"),
      SQLColumn("PediaType", "text")),
    "UnitPromotions_UnitCombats" -> SQLTable("UnitPromotions_UnitCombats",
      SQLColumn("PromotionType", "text"),
      SQLColumn("UnitCombatType", "text"),
      SQLColumn("PediaType", "text")),
    "UnitPromotions_CivilianUnitType" -> SQLTable("UnitPromotions_CivilianUnitType",
      SQLColumn("PromotionType", "text"),
      SQLColumn("UnitType", "text")),
    "UnitPromotions_PostCombatRandomPromotion" -> SQLTable("UnitPromotions_PostCombatRandomPromotion",
      SQLColumn("PromotionType", "text"),
      SQLColumn("NewPromotion", "text")),
    "LeagueSpecialSessions" -> SQLTable("LeagueSpecialSessions",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("SessionSplashImage", "text"),
      SQLColumn("EraTrigger", "text"),
      SQLColumn("ImmediateProposal", "text"),
      SQLColumn("RecurringProposal", "text"),
      SQLColumn("TurnsBetweenSessions", "integer"),
      SQLColumn("CivDelegates", "integer"),
      SQLColumn("HostDelegates", "integer"),
      SQLColumn("CityStateDelegates", "integer"),
      SQLColumn("UnitedNations", "boolean")),
    "LeagueNames" -> SQLTable("LeagueNames",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("NameKey", "text")),
    "LeagueProjectRewards" -> SQLTable("LeagueProjectRewards",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("Building", "text"),
      SQLColumn("Happiness", "integer"),
      SQLColumn("FreeSocialPolicies", "integer"),
      SQLColumn("CultureBonusTurns", "integer"),
      SQLColumn("TourismBonusTurns", "integer"),
      SQLColumn("GoldenAgePoints", "integer"),
      SQLColumn("CityStateInfluenceBoost", "integer"),
      SQLColumn("BaseBeakersTurnsToCount", "integer"),
      SQLColumn("FreeUnitClass", "text")),
    "LeagueProjects" -> SQLTable("LeagueProjects",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("ProjectSplashImage", "text"),
      SQLColumn("Process", "text"),
      SQLColumn("CostPerPlayer", "integer"),
      SQLColumn("RewardTier1", "text"),
      SQLColumn("RewardTier2", "text"),
      SQLColumn("RewardTier3", "text"),
      SQLColumn("PortraitIndex", "integer"),
      SQLColumn("IconAtlas", "text")),
    "ResolutionDecisions" -> SQLTable("ResolutionDecisions",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text")),
    "Resolutions" -> SQLTable("Resolutions",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("Help", "text"),
      SQLColumn("VoterDecision", "text"),
      SQLColumn("ProposerDecision", "text"),
      SQLColumn("TechPrereqAnyMember", "text"),
      SQLColumn("AutomaticProposal", "boolean"),
      SQLColumn("UniqueType", "boolean"),
      SQLColumn("NoProposalByPlayer", "boolean"),
      SQLColumn("QuorumPercent", "integer"),
      SQLColumn("LeadersVoteBonusOnFail", "integer"),
      SQLColumn("DiplomaticVictory", "boolean"),
      SQLColumn("ChangeLeagueHost", "boolean"),
      SQLColumn("OneTimeGold", "integer"),
      SQLColumn("OneTimeGoldPercent", "integer"),
      SQLColumn("RaiseCityStateInfluenceToNeutral", "boolean"),
      SQLColumn("LeagueProjectEnabled", "text"),
      SQLColumn("GoldPerTurn", "integer"),
      SQLColumn("ResourceQuantity", "integer"),
      SQLColumn("EmbargoCityStates", "boolean"),
      SQLColumn("EmbargoPlayer", "boolean"),
      SQLColumn("NoResourceHappiness", "boolean"),
      SQLColumn("UnitMaintenanceGoldPercent", "integer"),
      SQLColumn("MemberDiscoveredTechMod", "integer"),
      SQLColumn("CulturePerWonder", "integer"),
      SQLColumn("CulturePerNaturalWonder", "integer"),
      SQLColumn("NoTrainingNuclearWeapons", "boolean"),
      SQLColumn("VotesForFollowingReligion", "integer"),
      SQLColumn("HolyCityTourism", "integer"),
      SQLColumn("ReligionSpreadStrengthMod", "integer"),
      SQLColumn("VotesForFollowingIdeology", "integer"),
      SQLColumn("OtherIdeologyRebellionMod", "integer"),
      SQLColumn("ArtsyGreatPersonRateMod", "integer"),
      SQLColumn("ScienceyGreatPersonRateMod", "integer"),
      SQLColumn("GreatPersonTileImprovementCulture", "integer"),
      SQLColumn("LandmarkCulture", "integer")),
    "UnitGameplay2DScripts" -> SQLTable("UnitGameplay2DScripts",
      SQLColumn("UnitType", "text"),
      SQLColumn("SelectionSound", "text"),
      SQLColumn("FirstSelectionSound", "text")),
    "sqlite_stat1" -> SQLTable("sqlite_stat1",
      SQLColumn("tbl", ""),
      SQLColumn("idx", ""),
      SQLColumn("stat", "")),
    "GreatWorkSlots" -> SQLTable("GreatWorkSlots",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("SlotsToolTipText", "text"),
      SQLColumn("EmptyToolTipText", "text"),
      SQLColumn("FilledIcon", "text"),
      SQLColumn("EmptyIcon", "text")),
    "GreatWorkClasses" -> SQLTable("GreatWorkClasses",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("SlotType", "text")),
    "GreatWorks" -> SQLTable("GreatWorks",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Description", "text"),
      SQLColumn("GreatWorkClassType", "text"),
      SQLColumn("ArtifactClassType", "text"),
      SQLColumn("EraType", "text"),
      SQLColumn("Image", "text"),
      SQLColumn("Audio", "text"),
      SQLColumn("Quote", "text"),
      SQLColumn("ArchaeologyOnly", "boolean")),
    "GreatWorkArtifactClasses" -> SQLTable("GreatWorkArtifactClasses",
      SQLColumn("ID", "integer"),
      SQLColumn("Type", "text"),
      SQLColumn("Value", "integer")),
    "Unit_MagicalGirlUpgrade" -> SQLTable("Unit_MagicalGirlUpgrade",
      SQLColumn("UnitType", "text"),
      SQLColumn("UpgradeUnitType", "text"),
      SQLColumn("TechRequired", "text")))

}
