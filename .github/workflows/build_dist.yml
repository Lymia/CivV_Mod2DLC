name: Build distribution

on:
  push:
    branches: [ master ]
    tags: [ '*' ]

env:
  SHELL: /bin/bash

jobs:
  buildNative:
    runs-on: ubuntu-latest
    container: archlinux/archlinux:multilib-devel
    steps:
      - name: Install packages
        run: pacman --noconfirm -Sy sbt jdk-openjdk git mingw-w64 clang nasm
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Fix dubious permissions error
        run: git config --global --add safe.directory /__w/MPPatch/MPPatch
      - name: Fetch git tags.
        run: git fetch --prune --unshallow --tags
      - name: Build native binaries
        run: scripts/build_linux_natives.sh
      - uses: actions/upload-artifact@v3
        with:
          name: mppatch_linux_natives.tar.gz
          path: mppatch_linux_natives.tar.gz

  buildInstallerLinux:
    runs-on: ubuntu-latest
    needs:
      - buildNative
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Fetch git tags.
        run: git fetch --prune --unshallow --tags
      - uses: actions/download-artifact@v3
        with:
          name: mppatch_linux_natives.tar.gz
          path: mppatch_linux_natives.tar.gz
      - uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: '21'
      - name: Build Linux installer
        run: scripts/build_linux_installer.sh
      - uses: actions/upload-artifact@v3
        with:
          name: mppatch_linux_installer.tar.gz
          path: mppatch_linux_installer.tar.gz

  buildDist:
    runs-on: ubuntu-20.04
    needs:
      - buildInstallerLinux
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Fetch git tags.
        run: git fetch --prune --unshallow --tags
      - uses: actions/download-artifact@v3
        with:
          name: mppatch_linux_installer.tar.gz
          path: mppatch_linux_installer
      - run: mv mppatch_linux_installer/* .
      - run: rm -rf mppatch_linux_installer
      - name: Build distribution
        run: scripts/build_dist.sh
      - uses: actions/upload-artifact@v3
        with:
          name: mppatch_dist.tar.gz
          path: mppatch_dist.tar.gz
